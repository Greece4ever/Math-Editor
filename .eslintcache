[{"C:\\Users\\progr\\Desktop\\win11\\editor\\src\\index.js":"1","C:\\Users\\progr\\Desktop\\win11\\editor\\src\\App.js":"2","C:\\Users\\progr\\Desktop\\win11\\editor\\src\\reportWebVitals.js":"3","C:\\Users\\progr\\Desktop\\win11\\editor\\src\\components\\parsing.js":"4","C:\\Users\\progr\\Desktop\\win11\\editor\\src\\components\\hooks.js":"5","C:\\Users\\progr\\Desktop\\win11\\editor\\src\\components\\replace.js":"6","C:\\Users\\progr\\Desktop\\win11\\editor\\src\\components\\renderMain.js":"7","C:\\Users\\progr\\Desktop\\win11\\editor\\src\\elementComponents\\dialog.js":"8","C:\\Users\\progr\\Desktop\\win11\\editor\\src\\elementComponents\\table.js":"9"},{"size":517,"mtime":1628204754299,"results":"10","hashOfConfig":"11"},{"size":9500,"mtime":1628374959612,"results":"12","hashOfConfig":"11"},{"size":375,"mtime":1628204754299,"results":"13","hashOfConfig":"11"},{"size":3751,"mtime":1628204754290,"results":"14","hashOfConfig":"11"},{"size":826,"mtime":1628271109326,"results":"15","hashOfConfig":"11"},{"size":4868,"mtime":1628375916734,"results":"16","hashOfConfig":"11"},{"size":1880,"mtime":1628374515362,"results":"17","hashOfConfig":"11"},{"size":4542,"mtime":1628369426569,"results":"18","hashOfConfig":"11"},{"size":1842,"mtime":1628361059550,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"mjgbe3",{"filePath":"23","messages":"24","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"22"},"C:\\Users\\progr\\Desktop\\win11\\editor\\src\\index.js",[],["43","44"],"C:\\Users\\progr\\Desktop\\win11\\editor\\src\\App.js",["45","46","47","48","49","50","51"],"C:\\Users\\progr\\Desktop\\win11\\editor\\src\\reportWebVitals.js",[],"C:\\Users\\progr\\Desktop\\win11\\editor\\src\\components\\parsing.js",["52","53","54","55","56"],"export function splitAtRange(str, x, y) {\r\n  return str.substring(0, x) + str.substring(y, str.length);\r\n}\r\n\r\nexport function insert_at(str, insrt, pos) {\r\n  return str.slice(0, pos) + insrt + str.slice(pos, str.length);\r\n}\r\n\r\nlet nums = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\r\n\r\n/* Return starting and ending index of outter-most parentheses */\r\n\r\n// Heading to the right ---->\r\nfunction mathRightPar(str, start_index) {\r\n  let i = start_index; // of parentheses \r\n    let j = 0;\r\n  let states = [];\r\n    for (j=i; j < str.length; j++) {\r\n        if (str[j] === \"(\") {\r\n            states.push(1)\r\n      // Parenteses Found at j creating [ states.length, j];\r\n    }\r\n        else if (str[j] == \")\") {\r\n            // Parenteses poped at j matching [states.length];\r\n            states.pop();\r\n            if (!states.length)\r\n                break;\r\n        }\r\n    }\r\n    return [i, j + 1];\r\n}\r\n\r\n// Heading to the left <----\r\nfunction matchLeftPar(str, start_index) {\r\n  let i = start_index; // of parentheses \r\n  let j = 0;\r\n  let states = [];\r\n    for (j=i; j > 0; j--) {\r\n        if (str[j] === \")\") {\r\n            states.push(1)\r\n      // Parenteses Found at j creating [ states.length, j];\r\n    }\r\n        else if (str[j] == \"(\") {\r\n            // Parenteses poped at j matching [states.length];\r\n            states.pop();\r\n            if (!states.length)\r\n                break;\r\n        }\r\n    }\r\n    return [j, i + 1];\r\n}\r\n\r\n// find repeating number character in string at index\r\nfunction num(str, index, inc=1, comp) {\r\n  let char;\r\n\tlet i;\r\n  for (i=index; comp(i); i += inc) \r\n  {\r\n    char = str[i];\r\n    if (!nums.includes(char)) \r\n      break;\r\n  }\r\n  \r\n  if (inc === -1) // Reverse if backwards\r\n\t\treturn [i + 1, index + 1];  \r\n  return [index, i];\r\n}\r\n\r\n/* \r\n\t Find the number | prentheses (heading to left or right when inc=-1 or inc=1) \r\n\t after div (/) symbol and return starting and ending index \r\n   as an array of [start, end]\r\n*/\r\nfunction handle_num(str, index, inc=1) {\r\n  let comp, j;\r\n  if (inc === 1) // Forward\r\n    comp = x => x < str.length;\r\n  else\r\n    comp = x => x >= 0; // TODO x > 0 should be x >= (BEGGINING OF \"(\" BRACKETS)\r\n\r\n  for (j=(index + inc); comp(j); j += inc)  { // Keep searching until whitespace is cleared\r\n    if (str[j] !== \" \") {\r\n      // Parentheses\r\n      if (str[j] === \"(\") { \r\n          if (inc === 1) // \"(\" can only be found when searching <---\r\n        \t\treturn mathRightPar(str, j);            \r\n      }\r\n      else if (str[j] == \")\") {\r\n        if (inc === -1) { // \")\" can only be found when searching <---\r\n          return matchLeftPar(str, j);            \r\n        }\r\n      }\r\n\t\t\t\r\n      // Single character | number\r\n      if (!nums.includes(str[j]))         \r\n        return [j, j +1]\r\n      else\r\n        return num(str, j, inc, comp);\r\n    }\r\n  }\r\n}\r\n\r\n// Get rid of outter parentheses\r\nfunction hpar(str) {\r\n\tif (str[0] == \"(\") {\r\n\t\treturn str.trim().substring(1, str.length - 1);\r\n  }\r\n  return str.trim();\r\n}\r\n\r\n// Convert only one\r\nfunction replace_frac(str, index) {\r\n  let right = handle_num(str, index, 1);\r\n  let left  = handle_num(str, index, -1);\r\n  \r\n  \tlet numerator \t= hpar (str.substring(left[0], left[1]))\r\n  \tlet denominator = hpar (str.substring(right[0], right[1]));\r\n  let to_latex = `\\\\frac{${numerator}}{${denominator}}`;\r\n     \r\n  let split_str = splitAtRange(str, left[0], right[1]); // Rest of the string\r\n  return insert_at(split_str, to_latex, left[0])\r\n}\r\n\r\n\r\n// Convert all fractions (ie 1/5) to latex (\\frac{1}{5})\r\nexport default function convertFraction(str) {\r\n\tlet cstr = str;\r\n\tlet index = cstr.indexOf(\"/\");\r\n  while (index != -1) {\r\n\t\tcstr = replace_frac(cstr, index);\r\n    index = cstr.indexOf(\"/\");\r\n  }\r\n  return cstr;\r\n}\r\n","C:\\Users\\progr\\Desktop\\win11\\editor\\src\\components\\hooks.js",["57","58"],"import React, { useEffect, useState, useRef } from \"react\";\r\n\r\nexport default function useInterval(callback, delay) {\r\n    const savedCallback = useRef();\r\n  \r\n    // Remember the latest callback.\r\n    useEffect(() => {\r\n      savedCallback.current = callback;\r\n    }, [callback]);\r\n  \r\n    // Set up the interval.\r\n    useEffect(() => {\r\n      let id = setInterval(() => {\r\n        savedCallback.current();\r\n      }, delay);\r\n      return () => clearInterval(id);\r\n    }, [delay]);\r\n}\r\n  \r\n\r\nexport function useEffectAllDepsChange(fn, deps) {\r\n  const [changeTarget, setChangeTarget] = useState(deps);\r\n\r\n  useEffect(() => {\r\n    setChangeTarget(prev => {\r\n      if (prev.every((dep, i) => dep !== deps[i])) {\r\n        return deps;\r\n      }\r\n\r\n      return prev;\r\n    });\r\n  }, [deps]);\r\n\r\n  useEffect(fn, changeTarget);\r\n}\r\n","C:\\Users\\progr\\Desktop\\win11\\editor\\src\\components\\replace.js",["59","60","61","62","63","64","65","66"],"C:\\Users\\progr\\Desktop\\win11\\editor\\src\\components\\renderMain.js",["67","68"],"C:\\Users\\progr\\Desktop\\win11\\editor\\src\\elementComponents\\dialog.js",["69","70","71","72","73"],"import { Dialog, LinearProgress } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\n\r\n\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n\r\nimport { Latex, repl, line_repl } from \"../components/replace\";\r\nimport { convertLatex, convertLinks } from \"../components/renderMain\"\r\n\r\n\r\nimport SimpleTable from './table';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\n\r\n\r\nfunction convertDict(latex_array)\r\n{\r\n    let obj = [];\r\n    obj.push({\"first\": convertLatex(\"(1)/(4πε0)\"), \"second\": \"(1)/(4πε0)\", \"third\": \"Fraction (a)/(b) is converted to \\\\frac{a}{b}\" });\r\n    for (let i=0; i < latex_array.length; i++)\r\n    {\r\n        let dict;\r\n        if (latex_array[i][0] === \"sqrt\")\r\n            dict = ({\"first\": convertLatex(\"sqrt {x + 1}\"), \"second\": \"sqrt {x + 1}\"});\r\n        else if (latex_array[i][1] === \"$1_$2\")\r\n            dict = ({\"first\": convertLatex(\"x0\"), \"second\": \"x0\"})    \r\n        else\r\n            dict = ({\"first\": convertLatex(latex_array[i][1]), \"second\": latex_array[i][0]})\r\n\r\n        dict[\"third\"] = latex_array[i][2];\r\n\r\n        obj.push(dict);\r\n\r\n    }\r\n\r\n    return obj;\r\n}\r\n\r\n\r\nfunction convertDict2(html_array, line_arr, word=\"Math\")\r\n{\r\n    let arr = [ ];\r\n\r\n    let page = \"https://github.com/Greece4ever\";\r\n    let _link = `[${word}](${page})`;\r\n    \r\n    arr.push({first: convertLinks(_link), second: _link, third: \"Link\" })\r\n\r\n    arr.push({first: convertLatex(\"x^2 = -1\"), second: \"$$ x^2 = - 1 $$\", third: \"Use $$ to write math\" })\r\n\r\n    for (let i=0; i < html_array.length; i++)\r\n    {\r\n        let obj = {};\r\n        let tag  = html_array[i][1];\r\n        let mdown = html_array[i][0];\r\n        \r\n        if (!tag === \"pre\")\r\n            obj.first   = `<${tag}>${word}</${tag}>`;\r\n        else\r\n            obj.first   = `<${tag}><span>${word}</span></${tag}>`;\r\n\r\n        obj.second  = `${mdown}${word}${mdown}`;\r\n        obj.third   =  html_array[i][2]\r\n\r\n        arr.push(obj);\r\n    }\r\n\r\n    for (let i=0; i < line_arr.length; i++)\r\n    {\r\n        let obj = {};\r\n\r\n        obj.first  = line_arr[i][1] + word + line_arr[i][2];\r\n        obj.second = line_arr[i][0] + word\r\n        obj.third = line_arr[i][3]\r\n\r\n        arr.push(obj);\r\n    }\r\n    \r\n\r\n    return arr;\r\n}\r\n\r\n\r\n\r\n\r\nconst HelpDialog = (props) => {\r\n\r\n    const [latexTable, setLatexTable] = useState(convertDict(Latex));\r\n    const [htmlTable, setHtmlTable]   = useState(convertDict2(repl, line_repl));\r\n\r\n    return (\r\n        <Dialog onClose={() => props.setOpen(false)} className={\"XAXAXAXA\"}  maxWidth={\"xl\"}  open={props.open}>\r\n\r\n            <DialogTitle style={{background: \"radial-gradient(#acacac, transparent)\"}}>\r\n                <div style={{    display: 'flex',    alignItems: 'center',    flexWrap: 'wrap',}}>\r\n                    <HelpIcon style={{width: \"24x\", height: \"24px\"}} />\r\n                    <span style={{marginLeft: \"5px\"}}>Formatting help</span>\r\n                </div>\r\n            </DialogTitle>\r\n                <DialogContent className={\"PEOSPEOSPEOS\"}>\r\n                <DialogContentText style={{wordWrap: \"break-word\"}}>\r\n                    Below you can find 2 tables\r\n                    <ul> 1. <a href=\"\" onClick={(e) => {\r\n                        e.preventDefault();\r\n                        document.getElementsByClassName(\"PEOSPEOSPEOS\")[0].scrollTop += document.getElementById(\"table0\").getBoundingClientRect().top - 100;\r\n                        } }>Latex</a>: Symbols are replaced only when inside $$ $$, (e.g $$ &gt;= $$ )</ul>\r\n\r\n                    <ul> 2. <a href=\"#\" onClick={e => {\r\n                        e.preventDefault();\r\n                        document.getElementsByClassName(\"PEOSPEOSPEOS\")[0].scrollTop += document.getElementById(\"table1\").getBoundingClientRect().top - 100;\r\n\r\n                        \r\n                    }}>HTML</a> are replaced everywhere but inside $$ (math) and ``` (code)</ul>\r\n                    \r\n                    You type the symbols in the <b>markdown</b> tab, then they output whatever is in the other tab\r\n\r\n                </DialogContentText>\r\n            \r\n\r\n            <SimpleTable id={\"table0\"} first={\"Latex\"} second={\"Markdown\"} table={latexTable}></SimpleTable>\r\n\r\n            <SimpleTable id={\"table1\"} first={\"HTML\"} second={\"Markdown\"} table={htmlTable}></SimpleTable>\r\n\r\n\r\n            </DialogContent>\r\n\r\n\r\n\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default HelpDialog;","C:\\Users\\progr\\Desktop\\win11\\editor\\src\\elementComponents\\table.js",["74"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing.unit * 3,\r\n    overflowX: 'hidden',\r\n  },\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\n\r\nfunction SimpleTable(props) {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <div id={props.id} className={classes.root}>\r\n      <Table className={classes.table}>\r\n        <TableHead style={{background: \"radial-gradient(#dbdbdb, transparent)\"}}>\r\n          <TableRow hover={true}>\r\n            <TableCell>{props.first}</TableCell>\r\n            <TableCell>{props.second}</TableCell>\r\n            <TableCell>Description</TableCell>\r\n\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n\r\n          {props.table.map(n => {\r\n            return (\r\n              <TableRow hover={true}   key={n.id}>\r\n                <TableCell dangerouslySetInnerHTML={{__html: n.first}} component=\"th\" scope=\"row\">\r\n                  {/* {n.first} */}\r\n                </TableCell>\r\n                <TableCell style={{\"fontFamily\": \"math\"}}><code>{n.second}</code></TableCell>\r\n                <TableCell style={{\"fontFamily\": \"math\"}}> <blockquote>{n.third}</blockquote> </TableCell>\r\n\r\n              </TableRow>\r\n            );\r\n          })}\r\n\r\n\r\n\r\n\r\n        </TableBody>\r\n      </Table>\r\n     </div>\r\n  );\r\n}\r\n\r\nSimpleTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SimpleTable);\r\n",{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":8,"column":8,"nodeType":"81","messageId":"82","endLine":8,"endColumn":19},{"ruleId":"79","severity":1,"message":"83","line":41,"column":13,"nodeType":"81","messageId":"82","endLine":41,"endColumn":27},{"ruleId":"79","severity":1,"message":"84","line":42,"column":14,"nodeType":"81","messageId":"82","endLine":42,"endColumn":29},{"ruleId":"79","severity":1,"message":"85","line":43,"column":11,"nodeType":"81","messageId":"82","endLine":43,"endColumn":34},{"ruleId":"79","severity":1,"message":"86","line":44,"column":25,"nodeType":"81","messageId":"82","endLine":44,"endColumn":35},{"ruleId":"79","severity":1,"message":"87","line":45,"column":16,"nodeType":"81","messageId":"82","endLine":45,"endColumn":35},{"ruleId":"88","severity":1,"message":"89","line":116,"column":67,"nodeType":"90","messageId":"91","endLine":116,"endColumn":69},{"ruleId":"88","severity":1,"message":"89","line":23,"column":25,"nodeType":"90","messageId":"91","endLine":23,"endColumn":27},{"ruleId":"88","severity":1,"message":"89","line":43,"column":25,"nodeType":"90","messageId":"91","endLine":43,"endColumn":27},{"ruleId":"88","severity":1,"message":"89","line":88,"column":23,"nodeType":"90","messageId":"91","endLine":88,"endColumn":25},{"ruleId":"88","severity":1,"message":"89","line":105,"column":13,"nodeType":"90","messageId":"91","endLine":105,"endColumn":15},{"ruleId":"88","severity":1,"message":"92","line":129,"column":16,"nodeType":"90","messageId":"91","endLine":129,"endColumn":18},{"ruleId":"79","severity":1,"message":"93","line":1,"column":8,"nodeType":"81","messageId":"82","endLine":1,"endColumn":13},{"ruleId":"94","severity":1,"message":"95","line":34,"column":3,"nodeType":"81","endLine":34,"endColumn":12,"suggestions":"96"},{"ruleId":"79","severity":1,"message":"97","line":1,"column":10,"nodeType":"81","messageId":"82","endLine":1,"endColumn":19},{"ruleId":"98","severity":1,"message":"99","line":11,"column":6,"nodeType":"100","messageId":"91","endLine":11,"endColumn":36},{"ruleId":"88","severity":1,"message":"92","line":54,"column":30,"nodeType":"90","messageId":"91","endLine":54,"endColumn":32},{"ruleId":"88","severity":1,"message":"89","line":71,"column":11,"nodeType":"90","messageId":"91","endLine":71,"endColumn":13},{"ruleId":"88","severity":1,"message":"89","line":79,"column":19,"nodeType":"90","messageId":"91","endLine":79,"endColumn":21},{"ruleId":"88","severity":1,"message":"89","line":101,"column":11,"nodeType":"90","messageId":"91","endLine":101,"endColumn":13},{"ruleId":"88","severity":1,"message":"89","line":153,"column":17,"nodeType":"90","messageId":"91","endLine":153,"endColumn":19},{"ruleId":"88","severity":1,"message":"89","line":185,"column":18,"nodeType":"90","messageId":"91","endLine":185,"endColumn":20},{"ruleId":"79","severity":1,"message":"101","line":3,"column":33,"nodeType":"81","messageId":"82","endLine":3,"endColumn":34},{"ruleId":"88","severity":1,"message":"92","line":61,"column":17,"nodeType":"90","messageId":"91","endLine":61,"endColumn":19},{"ruleId":"79","severity":1,"message":"102","line":1,"column":18,"nodeType":"81","messageId":"82","endLine":1,"endColumn":32},{"ruleId":"79","severity":1,"message":"103","line":90,"column":24,"nodeType":"81","messageId":"82","endLine":90,"endColumn":37},{"ruleId":"79","severity":1,"message":"104","line":91,"column":23,"nodeType":"81","messageId":"82","endLine":91,"endColumn":35},{"ruleId":"105","severity":1,"message":"106","line":105,"column":29,"nodeType":"107","endLine":108,"endColumn":29},{"ruleId":"105","severity":1,"message":"106","line":110,"column":29,"nodeType":"107","endLine":115,"endColumn":24},{"ruleId":"79","severity":1,"message":"108","line":9,"column":8,"nodeType":"81","messageId":"82","endLine":9,"endColumn":13},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'html2canvas' is defined but never used.","Identifier","unusedVar","'enableDarkMode' is defined but never used.","'disableDarkMode' is defined but never used.","'followSystemColorScheme' is defined but never used.","'collectCSS' is defined but never used.","'isDarkReaderEnabled' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'React' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fn'. Either include it or remove the dependency array.",["111"],"'insert_at' is defined but never used.","no-control-regex","Unexpected control character(s) in regular expression: \\x00.","Literal","'m' is defined but never used.","'LinearProgress' is defined but never used.","'setLatexTable' is assigned a value but never used.","'setHtmlTable' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Paper' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},"Update the dependencies array to be: [fn]",{"range":"114","text":"115"},[807,819],"[fn]"]