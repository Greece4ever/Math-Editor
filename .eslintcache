[{"C:\\Users\\progr\\Desktop\\win11\\editor\\src\\index.js":"1","C:\\Users\\progr\\Desktop\\win11\\editor\\src\\App.js":"2","C:\\Users\\progr\\Desktop\\win11\\editor\\src\\reportWebVitals.js":"3","C:\\Users\\progr\\Desktop\\win11\\editor\\src\\components\\parsing.js":"4","C:\\Users\\progr\\Desktop\\win11\\editor\\src\\components\\hooks.js":"5","C:\\Users\\progr\\Desktop\\win11\\editor\\src\\components\\replace.js":"6","C:\\Users\\progr\\Desktop\\win11\\editor\\src\\components\\renderMain.js":"7","C:\\Users\\progr\\Desktop\\win11\\editor\\src\\elementComponents\\dialog.js":"8","C:\\Users\\progr\\Desktop\\win11\\editor\\src\\elementComponents\\table.js":"9"},{"size":517,"mtime":1628204754299,"results":"10","hashOfConfig":"11"},{"size":7486,"mtime":1628346813180,"results":"12","hashOfConfig":"11"},{"size":375,"mtime":1628204754299,"results":"13","hashOfConfig":"11"},{"size":3751,"mtime":1628204754290,"results":"14","hashOfConfig":"11"},{"size":826,"mtime":1628271109326,"results":"15","hashOfConfig":"11"},{"size":4671,"mtime":1628353771183,"results":"16","hashOfConfig":"11"},{"size":2623,"mtime":1628295303967,"results":"17","hashOfConfig":"11"},{"size":4849,"mtime":1628353792663,"results":"18","hashOfConfig":"11"},{"size":2262,"mtime":1628353770460,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"mjgbe3",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\progr\\Desktop\\win11\\editor\\src\\index.js",[],["43","44"],"C:\\Users\\progr\\Desktop\\win11\\editor\\src\\App.js",["45"],"import React, { useEffect, useState, useRef } from \"react\";\r\n// import katex from \"katex\";\r\n\r\n// import convertFraction, { insert_at, splitAtRange } from \"./components/parsing\";\r\n// import {Latex, line_repl, repl, m, fnd, removeAtRange, line_replace, findInside} from './components/replace'\r\nimport {renderMarkdown, findAllMath, convertLatex} from './components/renderMain';\r\n\r\nimport html2canvas from 'html2canvas';\r\n\r\nimport \"./App.css\";\r\n\r\nimport useInterval, {useEffectAllDepsChange} from \"./components/hooks\";\r\n\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\r\n\r\n\r\nimport AceEditor from \"react-ace\";\r\n\r\nimport \"ace-builds/src-noconflict/mode-markdown\";\r\nimport \"ace-builds/src-noconflict/theme-monokai\";\r\n\r\nimport \"ace-builds/src-noconflict/theme-kuroir\";\r\nimport \"ace-builds/src-noconflict/theme-tomorrow\";\r\n\r\nimport \"ace-builds/src-noconflict/ext-language_tools\"\r\n\r\n\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\n\r\n// import Dialog from '@material-ui/core/Dialog';\r\nimport HelpDialog from './elementComponents/dialog'\r\n\r\n\r\nfunction App() {\r\n  const [textValue, setTextValue] = useState(\"\");\r\n  const [value, setValue]   = useState([\"\"]);  \r\n  const [value2, setValue2] = useState(\"\");\r\n\r\n\r\n\r\n  useInterval(() => {\r\n    localStorage.setItem(\"html\", textValue)\r\n  }, 15 * 1000);\r\n  \r\n\r\n\r\n  const [hidden, setHidden] = useState(false);\r\n\r\n\r\n  // Load previous text from memory\r\n  // useEffect(() => {\r\n  //   let val = localStorage.getItem(\"html\");\r\n  //   if (!val)\r\n  //     return;\r\n\r\n  //   setTextValue(val);\r\n\r\n  //   line_repl.forEach(i => {\r\n  //     val = line_replace(val, \"\\n\" +i[0], \"\\n\", i[1])\r\n  //   })\r\n\r\n  //   repl.forEach(i => {\r\n  //     val = fnd(val, i[0], i[1]);\r\n  //   })\r\n\r\n  //   val = replaceMathCenter(val, \"$$\");\r\n  //   val = replaceMath(val, \"@@\");\r\n\r\n  //   setValue(val);\r\n\r\n  // }, [])\r\n\r\n\r\n  // Print End Listener\r\n  useEffect(() => {\r\n    const onPrintEnd = (event) => {\r\n      setHidden(false);\r\n    }\r\n      \r\n    window.addEventListener(\"afterprint\", onPrintEnd);\r\n    \r\n    return () => {\r\n      window.removeEventListener('afterprint', onPrintEnd);\r\n    }\r\n  }, []);\r\n\r\n  const main_color = \"rgb(57, 68, 70)\";\r\n\r\n  // Print when hit PRINT .PDF\r\n  useEffect(() => {\r\n    if (hidden) {\r\n      console.log(document.getElementById(\"NOTICEME\").getAttribute(\"val\"));\r\n      if (document.getElementById(\"NOTICEME\").getAttribute(\"val\") == \"1\")\r\n      {\r\n        html2canvas(document.getElementById(\"NOTICEME\") ).then(canvas => {\r\n          var link = document.createElement(\"a\");\r\n          link.setAttribute('download', `math${Math.random().toString().split(\".\")[1]}.png`);\r\n          link.setAttribute('href', canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\"));\r\n          link.click();     \r\n          setHidden(false);    \r\n        })\r\n      }\r\n      else {\r\n        window.print();\r\n      }\r\n    }\r\n  }, [hidden])\r\n\r\n\r\n\r\n  // Editor\r\n  const _grid = useRef();\r\n  const [_height, set_height] = useState(0);\r\n\r\n  useEffect(() => {\r\n    set_height(window.innerHeight - _grid.current.offsetTop);\r\n  }, [_grid])\r\n\r\n\r\n  const _render = useRef();\r\n  const [_rendered, set_rendered] = useState(0);\r\n\r\n  useEffect(() => {\r\n    set_rendered(window.innerHeight - _render.current.offsetTop);\r\n  }, [_render])\r\n\r\n  useEffect(() => {\r\n    const onResize = (event) => {\r\n      set_height(window.innerHeight - _grid.current.offsetTop);\r\n      set_rendered(window.innerHeight - _render.current.offsetTop);\r\n    }\r\n      \r\n    window.addEventListener(\"resize\", onResize);\r\n    \r\n    return () => {\r\n      window.removeEventListener('resize', onResize);\r\n    }\r\n  }, [])\r\n\r\n  \r\n  const [mathSymbols, setMathSymbols] = useState();\r\n\r\n  const __render = (val) => {\r\n\r\n    let [str, math_symbols] = findAllMath(val, \"$$\", \"leonidas\");\r\n\r\n    setValue( [ renderMarkdown(str) ] );\r\n    setMathSymbols(math_symbols);\r\n  }\r\n\r\n  // change between 1 render or multiple renders\r\n  useEffectAllDepsChange(() => {\r\n\r\n\r\n    let elms = document.getElementsByClassName(\"leonidas\");\r\n    for (let i=0; i < elms.length; i++)\r\n    {\r\n      elms[i].innerHTML = convertLatex(mathSymbols[i]);\r\n    }\r\n\r\n  \r\n  }, [value, mathSymbols]);\r\n\r\n  // useEffect(() => {\r\n    \r\n\r\n  // }, [value])\r\n\r\n\r\n  const handleChange = e => {\r\n    let val = e;\r\n\r\n    setTextValue(val);\r\n\r\n    __render(val);\r\n    // val = renderMarkdown(val);\r\n    // setValue(val);\r\n  }\r\n\r\n  const savePDF = () => {\r\n    document.getElementById(\"NOTICEME\").setAttribute(\"val\", \"0\")\r\n    setHidden(true);\r\n    setValue2(value);\r\n    localStorage.setItem(\"html\", textValue);\r\n  }\r\n\r\n\r\n  const savePNG = () => {\r\n    document.getElementById(\"NOTICEME\").setAttribute(\"val\", \"1\");\r\n    setHidden(true);\r\n    setValue2(value);\r\n\r\n  }\r\n\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      \r\n      <HelpDialog open={dialogOpen} />\r\n\r\n      <div style={{display: hidden ? \"none\" : \"\"}}>\r\n\r\n      <div style={{\r\n        width: \"100%\",\r\n        height: \"10px\",\r\n        backgroundColor: \"rgb(57, 68, 70)\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        position: \"relative\"\r\n      \r\n      }}\r\n      \r\n      \r\n      onWheel={() => console.log(\"scroll\")}>\r\n\r\n\r\n      </div>\r\n\r\n      <div style={{\r\n      position: \"absolute\",\r\n      right: 0,\r\n      bottom: 0,\r\n      display: \"grid\"\r\n      }}>\r\n        <Fab onClick={() => savePDF()} style={{marginBottom: \"10px\", marginRight: \"10px\"}} color=\"secondary\" aria-label=\"add\">\r\n          <PictureAsPdfIcon />    \r\n        </Fab>\r\n\r\n        <Fab onClick={() => savePNG()} style={{marginBottom: \"10px\", marginRight: \"10px\"}} color=\"primary\" aria-label=\"add\">\r\n          <ImageIcon />\r\n        </Fab>\r\n\r\n      <Fab onClick={e => setDialogOpen(true)} style={{marginBottom: \"10px\", marginRight: \"10px\"}} color=\"contained\" aria-label=\"add\" >\r\n        <HelpIcon />\r\n      </Fab>\r\n      </div>\r\n\r\n\r\n\r\n\r\n      <Grid style={{ }} container spacing={3}>\r\n        <Grid ref={_grid} style={{borderRight: `10px solid ${main_color}`, paddingBottom: 0, paddingRight: 0, height: _height}} item xs={6}>\r\n          <AceEditor  \r\n          value={textValue}\r\n          style={{width: \"100%\"}}\r\n\r\n\r\n\r\n          onChange={e => handleChange(e)}\r\n          wrapEnabled={true}\r\n          fontSize={15}\r\n          height={_height}\r\n          placeholder={`Start typing some math. Syntax rules can be found in https://github.com/Greece4ever/Math-Editor`}\r\n          mode=\"markdown\"\r\n          theme=\"monokai\"\r\n          name=\"blah2\" />\r\n\r\n\r\n        </Grid>\r\n\r\n        <Grid style={{height: _rendered, paddingBottom: 0, borderLeft: `10px solid ${main_color}`}} ref={_render} item xs={6}>\r\n          <div id=\"peos\" style={{\r\n            width: \"100%\",\r\n            background: \"white\",\r\n            float: \"right\",\r\n\r\n            marginTop: \"10px\",\r\n            fontFamily: \"math\",\r\n            height: \"calc(100% - 10px)\",\r\n\r\n            overflow: \"auto\"\r\n          }}\r\n\r\n          dangerouslySetInnerHTML={{__html: value[0] }}></div>\r\n        </Grid>\r\n      </Grid>\r\n      </div>\r\n\r\n        <div val=\"0\" id=\"NOTICEME\" style={{display: hidden ? \"block\" : \"none\", fontFamily: \"math\", margin: \"10px\", minHeight: window.innerHeight}} dangerouslySetInnerHTML={{__html: value2}}></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\progr\\Desktop\\win11\\editor\\src\\reportWebVitals.js",[],"C:\\Users\\progr\\Desktop\\win11\\editor\\src\\components\\parsing.js",["46","47","48","49","50"],"export function splitAtRange(str, x, y) {\r\n  return str.substring(0, x) + str.substring(y, str.length);\r\n}\r\n\r\nexport function insert_at(str, insrt, pos) {\r\n  return str.slice(0, pos) + insrt + str.slice(pos, str.length);\r\n}\r\n\r\nlet nums = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\r\n\r\n/* Return starting and ending index of outter-most parentheses */\r\n\r\n// Heading to the right ---->\r\nfunction mathRightPar(str, start_index) {\r\n  let i = start_index; // of parentheses \r\n    let j = 0;\r\n  let states = [];\r\n    for (j=i; j < str.length; j++) {\r\n        if (str[j] === \"(\") {\r\n            states.push(1)\r\n      // Parenteses Found at j creating [ states.length, j];\r\n    }\r\n        else if (str[j] == \")\") {\r\n            // Parenteses poped at j matching [states.length];\r\n            states.pop();\r\n            if (!states.length)\r\n                break;\r\n        }\r\n    }\r\n    return [i, j + 1];\r\n}\r\n\r\n// Heading to the left <----\r\nfunction matchLeftPar(str, start_index) {\r\n  let i = start_index; // of parentheses \r\n  let j = 0;\r\n  let states = [];\r\n    for (j=i; j > 0; j--) {\r\n        if (str[j] === \")\") {\r\n            states.push(1)\r\n      // Parenteses Found at j creating [ states.length, j];\r\n    }\r\n        else if (str[j] == \"(\") {\r\n            // Parenteses poped at j matching [states.length];\r\n            states.pop();\r\n            if (!states.length)\r\n                break;\r\n        }\r\n    }\r\n    return [j, i + 1];\r\n}\r\n\r\n// find repeating number character in string at index\r\nfunction num(str, index, inc=1, comp) {\r\n  let char;\r\n\tlet i;\r\n  for (i=index; comp(i); i += inc) \r\n  {\r\n    char = str[i];\r\n    if (!nums.includes(char)) \r\n      break;\r\n  }\r\n  \r\n  if (inc === -1) // Reverse if backwards\r\n\t\treturn [i + 1, index + 1];  \r\n  return [index, i];\r\n}\r\n\r\n/* \r\n\t Find the number | prentheses (heading to left or right when inc=-1 or inc=1) \r\n\t after div (/) symbol and return starting and ending index \r\n   as an array of [start, end]\r\n*/\r\nfunction handle_num(str, index, inc=1) {\r\n  let comp, j;\r\n  if (inc === 1) // Forward\r\n    comp = x => x < str.length;\r\n  else\r\n    comp = x => x >= 0; // TODO x > 0 should be x >= (BEGGINING OF \"(\" BRACKETS)\r\n\r\n  for (j=(index + inc); comp(j); j += inc)  { // Keep searching until whitespace is cleared\r\n    if (str[j] !== \" \") {\r\n      // Parentheses\r\n      if (str[j] === \"(\") { \r\n          if (inc === 1) // \"(\" can only be found when searching <---\r\n        \t\treturn mathRightPar(str, j);            \r\n      }\r\n      else if (str[j] == \")\") {\r\n        if (inc === -1) { // \")\" can only be found when searching <---\r\n          return matchLeftPar(str, j);            \r\n        }\r\n      }\r\n\t\t\t\r\n      // Single character | number\r\n      if (!nums.includes(str[j]))         \r\n        return [j, j +1]\r\n      else\r\n        return num(str, j, inc, comp);\r\n    }\r\n  }\r\n}\r\n\r\n// Get rid of outter parentheses\r\nfunction hpar(str) {\r\n\tif (str[0] == \"(\") {\r\n\t\treturn str.trim().substring(1, str.length - 1);\r\n  }\r\n  return str.trim();\r\n}\r\n\r\n// Convert only one\r\nfunction replace_frac(str, index) {\r\n  let right = handle_num(str, index, 1);\r\n  let left  = handle_num(str, index, -1);\r\n  \r\n  \tlet numerator \t= hpar (str.substring(left[0], left[1]))\r\n  \tlet denominator = hpar (str.substring(right[0], right[1]));\r\n  let to_latex = `\\\\frac{${numerator}}{${denominator}}`;\r\n     \r\n  let split_str = splitAtRange(str, left[0], right[1]); // Rest of the string\r\n  return insert_at(split_str, to_latex, left[0])\r\n}\r\n\r\n\r\n// Convert all fractions (ie 1/5) to latex (\\frac{1}{5})\r\nexport default function convertFraction(str) {\r\n\tlet cstr = str;\r\n\tlet index = cstr.indexOf(\"/\");\r\n  while (index != -1) {\r\n\t\tcstr = replace_frac(cstr, index);\r\n    index = cstr.indexOf(\"/\");\r\n  }\r\n  return cstr;\r\n}\r\n","C:\\Users\\progr\\Desktop\\win11\\editor\\src\\components\\hooks.js",["51","52"],"import React, { useEffect, useState, useRef } from \"react\";\r\n\r\nexport default function useInterval(callback, delay) {\r\n    const savedCallback = useRef();\r\n  \r\n    // Remember the latest callback.\r\n    useEffect(() => {\r\n      savedCallback.current = callback;\r\n    }, [callback]);\r\n  \r\n    // Set up the interval.\r\n    useEffect(() => {\r\n      let id = setInterval(() => {\r\n        savedCallback.current();\r\n      }, delay);\r\n      return () => clearInterval(id);\r\n    }, [delay]);\r\n}\r\n  \r\n\r\nexport function useEffectAllDepsChange(fn, deps) {\r\n  const [changeTarget, setChangeTarget] = useState(deps);\r\n\r\n  useEffect(() => {\r\n    setChangeTarget(prev => {\r\n      if (prev.every((dep, i) => dep !== deps[i])) {\r\n        return deps;\r\n      }\r\n\r\n      return prev;\r\n    });\r\n  }, [deps]);\r\n\r\n  useEffect(fn, changeTarget);\r\n}\r\n","C:\\Users\\progr\\Desktop\\win11\\editor\\src\\components\\replace.js",["53","54","55","56","57","58","59","60"],"C:\\Users\\progr\\Desktop\\win11\\editor\\src\\components\\renderMain.js",["61","62","63","64","65"],"import katex from \"katex\";\r\nimport convertFraction, { insert_at, splitAtRange } from \"./parsing\";\r\nimport {Latex, line_repl, repl, m, fnd, removeAtRange, __line_replace, findLink, findInside} from './replace'\r\n\r\nfunction replaceMath(str, ptrn=\"$$\") {\r\n    let ind = findInside(str, ptrn); // Find where it starts and ends \r\n    let sub_str;\r\n    while (ind[0] != -1) {\r\n      str= ind[2]; // End\r\n      sub_str = removeAtRange(str, ind[0], ind[1]); // math string\r\n      str = splitAtRange(str, ind[0], ind[1]); // rest of the string\r\n      Latex.forEach(symbol => {\r\n        sub_str = sub_str.replaceAll(symbol[0], symbol[1])\r\n      });\r\n      \r\n      try {\r\n        sub_str = convertFraction(sub_str);\r\n      } catch(e) {};\r\n  \r\n      let html = katex.renderToString(sub_str, {throwOnError: false});\r\n  \r\n      // html = `<div class=\"center\">${html}</div>`\r\n  \r\n      str = insert_at(str, html, ind[0]);\r\n      ind = findInside(str, ptrn);\r\n    }\r\n    return str;\r\n}\r\n\r\n\r\n// convert math string e.g `x/5` to latex `\\frac{x}{5}`\r\nexport function convertLatex(sub_str)\r\n{\r\n  Latex.forEach(symbol => {\r\n    sub_str = sub_str.replaceAll(symbol[0], symbol[1] + \" \")\r\n  });\r\n  \r\n  try {\r\n    sub_str = convertFraction(sub_str);\r\n  } catch(e) {};\r\n\r\n  return katex.renderToString(sub_str, {throwOnError: false});\r\n};\r\n\r\nexport const convertLinks = (string) => {\r\n  let str1 = \"\"\r\n  let _ = findLink(string);\r\n\r\n\r\n  while ( typeof(_) !== \"string\" )\r\n  {\r\n      str1 += _[0];\r\n      _ = findLink(_[1]);\r\n  }\r\n\r\n  return str1 + _;\r\n}\r\n\r\n  \r\nexport function renderMarkdown(val)\r\n  {\r\n\r\n    val = val.replaceAll(\"    \", \"&nbsp;\");\r\n\r\n      // ([A-Za-z]|[^\\x00-\\x7F])(\\d)\r\n    line_repl.forEach(i => {\r\n      // val = line_replace( /*\"\\n\" +*/ val, \"\\n\" +i[0], \"\\n\", i[1])\r\n      val = __line_replace(val, i[0], i[1], i[2]);\r\n\r\n      // val = val.replace(\"\\n\", \"\");      \r\n    })\r\n  \r\n    repl.forEach(i => {\r\n      val = fnd(val, i[0], i[1]);\r\n    })\r\n\r\n\r\n    // val = replaceMath(val, \"$$\");\r\n\r\n    val = convertLinks(val);\r\n  \r\n    return val;\r\n  }\r\n\r\n\r\nexport function findAllMath(str, ptrn=\"$$\", className=\"math\") {\r\n  let ind = findInside(str, ptrn); // Find where it starts and ends \r\n  let sub_str;\r\n\r\n  let math_strings = [];\r\n\r\n  while (ind[0] != -1) {\r\n    str= ind[2]; // End\r\n    sub_str = removeAtRange(str, ind[0], ind[1]); // math string\r\n    str = splitAtRange(str, ind[0], ind[1]); // rest of the string\r\n\r\n    math_strings.push(sub_str);\r\n\r\n    let html = `<span class=\"${className}\"></span>`\r\n\r\n\r\n    str = insert_at(str, html, ind[0]);\r\n    ind = findInside(str, ptrn);\r\n  }\r\n\r\n  return [str, math_strings];\r\n}\r\n\r\n","C:\\Users\\progr\\Desktop\\win11\\editor\\src\\elementComponents\\dialog.js",["66","67","68","69","70","71","72","73","74","75"],"C:\\Users\\progr\\Desktop\\win11\\editor\\src\\elementComponents\\table.js",["76","77"],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":97,"column":67,"nodeType":"84","messageId":"85","endLine":97,"endColumn":69},{"ruleId":"82","severity":1,"message":"83","line":23,"column":25,"nodeType":"84","messageId":"85","endLine":23,"endColumn":27},{"ruleId":"82","severity":1,"message":"83","line":43,"column":25,"nodeType":"84","messageId":"85","endLine":43,"endColumn":27},{"ruleId":"82","severity":1,"message":"83","line":88,"column":23,"nodeType":"84","messageId":"85","endLine":88,"endColumn":25},{"ruleId":"82","severity":1,"message":"83","line":105,"column":13,"nodeType":"84","messageId":"85","endLine":105,"endColumn":15},{"ruleId":"82","severity":1,"message":"86","line":129,"column":16,"nodeType":"84","messageId":"85","endLine":129,"endColumn":18},{"ruleId":"87","severity":1,"message":"88","line":1,"column":8,"nodeType":"89","messageId":"90","endLine":1,"endColumn":13},{"ruleId":"91","severity":1,"message":"92","line":34,"column":3,"nodeType":"89","endLine":34,"endColumn":12,"suggestions":"93"},{"ruleId":"87","severity":1,"message":"94","line":1,"column":10,"nodeType":"89","messageId":"90","endLine":1,"endColumn":19},{"ruleId":"95","severity":1,"message":"96","line":11,"column":6,"nodeType":"97","messageId":"85","endLine":11,"endColumn":36},{"ruleId":"82","severity":1,"message":"86","line":50,"column":30,"nodeType":"84","messageId":"85","endLine":50,"endColumn":32},{"ruleId":"82","severity":1,"message":"83","line":67,"column":11,"nodeType":"84","messageId":"85","endLine":67,"endColumn":13},{"ruleId":"82","severity":1,"message":"83","line":75,"column":19,"nodeType":"84","messageId":"85","endLine":75,"endColumn":21},{"ruleId":"82","severity":1,"message":"83","line":97,"column":11,"nodeType":"84","messageId":"85","endLine":97,"endColumn":13},{"ruleId":"82","severity":1,"message":"83","line":149,"column":17,"nodeType":"84","messageId":"85","endLine":149,"endColumn":19},{"ruleId":"82","severity":1,"message":"83","line":181,"column":18,"nodeType":"84","messageId":"85","endLine":181,"endColumn":20},{"ruleId":"87","severity":1,"message":"98","line":3,"column":33,"nodeType":"89","messageId":"90","endLine":3,"endColumn":34},{"ruleId":"87","severity":1,"message":"99","line":5,"column":10,"nodeType":"89","messageId":"90","endLine":5,"endColumn":21},{"ruleId":"82","severity":1,"message":"86","line":8,"column":19,"nodeType":"84","messageId":"85","endLine":8,"endColumn":21},{"ruleId":"100","severity":1,"message":"101","line":12,"column":21,"nodeType":"102","messageId":"103","endLine":14,"endColumn":8},{"ruleId":"82","severity":1,"message":"86","line":92,"column":17,"nodeType":"84","messageId":"85","endLine":92,"endColumn":19},{"ruleId":"87","severity":1,"message":"104","line":9,"column":8,"nodeType":"89","messageId":"90","endLine":9,"endColumn":17},{"ruleId":"87","severity":1,"message":"105","line":10,"column":8,"nodeType":"89","messageId":"90","endLine":10,"endColumn":17},{"ruleId":"87","severity":1,"message":"106","line":11,"column":8,"nodeType":"89","messageId":"90","endLine":11,"endColumn":22},{"ruleId":"87","severity":1,"message":"107","line":12,"column":8,"nodeType":"89","messageId":"90","endLine":12,"endColumn":17},{"ruleId":"87","severity":1,"message":"108","line":13,"column":8,"nodeType":"89","messageId":"90","endLine":13,"endColumn":16},{"ruleId":"87","severity":1,"message":"109","line":14,"column":8,"nodeType":"89","messageId":"90","endLine":14,"endColumn":13},{"ruleId":"87","severity":1,"message":"110","line":16,"column":10,"nodeType":"89","messageId":"90","endLine":16,"endColumn":14},{"ruleId":"87","severity":1,"message":"111","line":21,"column":8,"nodeType":"89","messageId":"90","endLine":21,"endColumn":13},{"ruleId":"87","severity":1,"message":"112","line":22,"column":10,"nodeType":"89","messageId":"90","endLine":22,"endColumn":13},{"ruleId":"87","severity":1,"message":"113","line":51,"column":24,"nodeType":"89","messageId":"90","endLine":51,"endColumn":37},{"ruleId":"87","severity":1,"message":"111","line":9,"column":8,"nodeType":"89","messageId":"90","endLine":9,"endColumn":13},{"ruleId":"87","severity":1,"message":"114","line":28,"column":7,"nodeType":"89","messageId":"90","endLine":28,"endColumn":11},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fn'. Either include it or remove the dependency array.",["117"],"'insert_at' is defined but never used.","no-control-regex","Unexpected control character(s) in regular expression: \\x00.","Literal","'m' is defined but never used.","'replaceMath' is defined but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'sub_str', 'sub_str'.","ArrowFunctionExpression","unsafeRefs","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableContainer' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'Table' is defined but never used.","'Grid' is defined but never used.","'Paper' is defined but never used.","'Box' is defined but never used.","'setLatexTable' is assigned a value but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},"Update the dependencies array to be: [fn]",{"range":"120","text":"121"},[807,819],"[fn]"]