[{"C:\\Users\\progr\\Desktop\\win11\\editor\\src\\index.js":"1","C:\\Users\\progr\\Desktop\\win11\\editor\\src\\App.js":"2","C:\\Users\\progr\\Desktop\\win11\\editor\\src\\reportWebVitals.js":"3","C:\\Users\\progr\\Desktop\\win11\\editor\\src\\components\\parsing.js":"4","C:\\Users\\progr\\Desktop\\win11\\editor\\src\\components\\hooks.js":"5","C:\\Users\\progr\\Desktop\\win11\\editor\\src\\components\\replace.js":"6","C:\\Users\\progr\\Desktop\\win11\\editor\\src\\components\\renderMain.js":"7","C:\\Users\\progr\\Desktop\\win11\\editor\\src\\elementComponents\\dialog.js":"8","C:\\Users\\progr\\Desktop\\win11\\editor\\src\\elementComponents\\table.js":"9","C:\\Users\\progr\\Desktop\\win11\\editor\\src\\elementComponents\\save.js":"10","C:\\Users\\progr\\Desktop\\win11\\editor\\src\\elementComponents\\icons.js":"11","C:\\Users\\progr\\Desktop\\win11\\editor\\src\\elementComponents\\dialog2.js":"12"},{"size":517,"mtime":1628204754299,"results":"13","hashOfConfig":"14"},{"size":9985,"mtime":1628638131168,"results":"15","hashOfConfig":"14"},{"size":375,"mtime":1628204754299,"results":"16","hashOfConfig":"14"},{"size":3751,"mtime":1628204754290,"results":"17","hashOfConfig":"14"},{"size":826,"mtime":1628271109326,"results":"18","hashOfConfig":"14"},{"size":4933,"mtime":1628528741695,"results":"19","hashOfConfig":"14"},{"size":1886,"mtime":1628529354220,"results":"20","hashOfConfig":"14"},{"size":4463,"mtime":1628529277550,"results":"21","hashOfConfig":"14"},{"size":1842,"mtime":1628361059550,"results":"22","hashOfConfig":"14"},{"size":1478,"mtime":1628384489196,"results":"23","hashOfConfig":"14"},{"size":3717,"mtime":1628524324107,"results":"24","hashOfConfig":"14"},{"size":1768,"mtime":1628432937814,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"mjgbe3",{"filePath":"29","messages":"30","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"28"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"28"},"C:\\Users\\progr\\Desktop\\win11\\editor\\src\\index.js",[],["59","60"],"C:\\Users\\progr\\Desktop\\win11\\editor\\src\\App.js",["61","62","63","64","65","66"],"C:\\Users\\progr\\Desktop\\win11\\editor\\src\\reportWebVitals.js",[],"C:\\Users\\progr\\Desktop\\win11\\editor\\src\\components\\parsing.js",["67","68","69","70","71"],"export function splitAtRange(str, x, y) {\r\n  return str.substring(0, x) + str.substring(y, str.length);\r\n}\r\n\r\nexport function insert_at(str, insrt, pos) {\r\n  return str.slice(0, pos) + insrt + str.slice(pos, str.length);\r\n}\r\n\r\nlet nums = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\r\n\r\n/* Return starting and ending index of outter-most parentheses */\r\n\r\n// Heading to the right ---->\r\nfunction mathRightPar(str, start_index) {\r\n  let i = start_index; // of parentheses \r\n    let j = 0;\r\n  let states = [];\r\n    for (j=i; j < str.length; j++) {\r\n        if (str[j] === \"(\") {\r\n            states.push(1)\r\n      // Parenteses Found at j creating [ states.length, j];\r\n    }\r\n        else if (str[j] == \")\") {\r\n            // Parenteses poped at j matching [states.length];\r\n            states.pop();\r\n            if (!states.length)\r\n                break;\r\n        }\r\n    }\r\n    return [i, j + 1];\r\n}\r\n\r\n// Heading to the left <----\r\nfunction matchLeftPar(str, start_index) {\r\n  let i = start_index; // of parentheses \r\n  let j = 0;\r\n  let states = [];\r\n    for (j=i; j > 0; j--) {\r\n        if (str[j] === \")\") {\r\n            states.push(1)\r\n      // Parenteses Found at j creating [ states.length, j];\r\n    }\r\n        else if (str[j] == \"(\") {\r\n            // Parenteses poped at j matching [states.length];\r\n            states.pop();\r\n            if (!states.length)\r\n                break;\r\n        }\r\n    }\r\n    return [j, i + 1];\r\n}\r\n\r\n// find repeating number character in string at index\r\nfunction num(str, index, inc=1, comp) {\r\n  let char;\r\n\tlet i;\r\n  for (i=index; comp(i); i += inc) \r\n  {\r\n    char = str[i];\r\n    if (!nums.includes(char)) \r\n      break;\r\n  }\r\n  \r\n  if (inc === -1) // Reverse if backwards\r\n\t\treturn [i + 1, index + 1];  \r\n  return [index, i];\r\n}\r\n\r\n/* \r\n\t Find the number | prentheses (heading to left or right when inc=-1 or inc=1) \r\n\t after div (/) symbol and return starting and ending index \r\n   as an array of [start, end]\r\n*/\r\nfunction handle_num(str, index, inc=1) {\r\n  let comp, j;\r\n  if (inc === 1) // Forward\r\n    comp = x => x < str.length;\r\n  else\r\n    comp = x => x >= 0; // TODO x > 0 should be x >= (BEGGINING OF \"(\" BRACKETS)\r\n\r\n  for (j=(index + inc); comp(j); j += inc)  { // Keep searching until whitespace is cleared\r\n    if (str[j] !== \" \") {\r\n      // Parentheses\r\n      if (str[j] === \"(\") { \r\n          if (inc === 1) // \"(\" can only be found when searching <---\r\n        \t\treturn mathRightPar(str, j);            \r\n      }\r\n      else if (str[j] == \")\") {\r\n        if (inc === -1) { // \")\" can only be found when searching <---\r\n          return matchLeftPar(str, j);            \r\n        }\r\n      }\r\n\t\t\t\r\n      // Single character | number\r\n      if (!nums.includes(str[j]))         \r\n        return [j, j +1]\r\n      else\r\n        return num(str, j, inc, comp);\r\n    }\r\n  }\r\n}\r\n\r\n// Get rid of outter parentheses\r\nfunction hpar(str) {\r\n\tif (str[0] == \"(\") {\r\n\t\treturn str.trim().substring(1, str.length - 1);\r\n  }\r\n  return str.trim();\r\n}\r\n\r\n// Convert only one\r\nfunction replace_frac(str, index) {\r\n  let right = handle_num(str, index, 1);\r\n  let left  = handle_num(str, index, -1);\r\n  \r\n  \tlet numerator \t= hpar (str.substring(left[0], left[1]))\r\n  \tlet denominator = hpar (str.substring(right[0], right[1]));\r\n  let to_latex = `\\\\frac{${numerator}}{${denominator}}`;\r\n     \r\n  let split_str = splitAtRange(str, left[0], right[1]); // Rest of the string\r\n  return insert_at(split_str, to_latex, left[0])\r\n}\r\n\r\n\r\n// Convert all fractions (ie 1/5) to latex (\\frac{1}{5})\r\nexport default function convertFraction(str) {\r\n\tlet cstr = str;\r\n\tlet index = cstr.indexOf(\"/\");\r\n  while (index != -1) {\r\n\t\tcstr = replace_frac(cstr, index);\r\n    index = cstr.indexOf(\"/\");\r\n  }\r\n  return cstr;\r\n}\r\n","C:\\Users\\progr\\Desktop\\win11\\editor\\src\\components\\hooks.js",["72","73"],"import React, { useEffect, useState, useRef } from \"react\";\r\n\r\nexport default function useInterval(callback, delay) {\r\n    const savedCallback = useRef();\r\n  \r\n    // Remember the latest callback.\r\n    useEffect(() => {\r\n      savedCallback.current = callback;\r\n    }, [callback]);\r\n  \r\n    // Set up the interval.\r\n    useEffect(() => {\r\n      let id = setInterval(() => {\r\n        savedCallback.current();\r\n      }, delay);\r\n      return () => clearInterval(id);\r\n    }, [delay]);\r\n}\r\n  \r\n\r\nexport function useEffectAllDepsChange(fn, deps) {\r\n  const [changeTarget, setChangeTarget] = useState(deps);\r\n\r\n  useEffect(() => {\r\n    setChangeTarget(prev => {\r\n      if (prev.every((dep, i) => dep !== deps[i])) {\r\n        return deps;\r\n      }\r\n\r\n      return prev;\r\n    });\r\n  }, [deps]);\r\n\r\n  useEffect(fn, changeTarget);\r\n}\r\n","C:\\Users\\progr\\Desktop\\win11\\editor\\src\\components\\replace.js",["74","75","76","77","78","79","80","81"],"import { insert_at } from \"./parsing\";\r\n\r\nexport let Latex = [\r\n    ['>=', \"\\\\ge\",       \"Greater than/equal\"],\r\n    [\"<=>\", \" \\\\iff \" ,  \"If and only if\"],\r\n    ['<=', \"\\\\le\",       \"Less than/equal\"],\r\n    ['=>', \"\\\\implies\",  \"Implies\"],\r\n    [\"+-\", \"\\\\pm\",       \"Plus/Minus\"],\r\n    [\"sqrt\", \"\\\\sqrt\",   \"Square root, replace x with anything\"],\r\n    [\"!=\", \"\\\\neq\",      \"Not equal\"],\r\n    [/([A-Za-z]|[^\\x00-\\x7F])(\\d)/g, \"$1_$2\", \"Subscript, Replace x with any letter and 0 with any number\"],\r\n    [\"<-\", \"\\\\leftarrow\", \"Leftarrow\"],\r\n    [\"->\", \"\\\\rightarrow\",\"Rightarrow\"],\r\n    [\"*\", \"\\\\cdot\",        \"Centered dot\"]\r\n  ]\r\n\r\n\r\n  \r\nexport const line_repl = [\r\n    [\"#\", \"<h2>\", \"</h2><hr></hr>\", \"Large text with underline\"],\r\n    ['-', \"<ul>\", \"</ul>\", \"Text with left margin\"],\r\n    ['>', \"<blockquote><ul>\", \"</ul></blockquote>\", \"bloquote\"],\r\n]\r\n\r\nexport const repl = [\r\n    [\"**\", \"b\", \"Bold\"],\r\n    [\"*_\", \"i\", \"Italic\"],\r\n    // [\"\\n\\n\", \"p\", \"\"],\r\n    [\"```\", \"pre\", \"Code\"],\r\n    [\"@@\", \"center\", \"Centered Text\"],\r\n    [\"__\", \"sup\", \"Superscript\"],\r\n    [\"^^\", \"sub\", \"Subscript\"],\r\n]\r\n\r\nexport const just_repl = [\r\n    [\"\\n\\n\\n\",     \"<p></p><br>\\n\\n\"], // 2 empty lines (+ 1 line ending e,g hello\\n\\n\\n)\r\n    [\"\\r\\n \\r\\n\", \"<p></p><br>\\r\\n\"],\r\n    [\"  \", \"&nbsp;\"],\r\n]\r\n\r\n\r\nexport function m(str, times) {\r\n    let string = \"\";\r\n    for (let i=0; i < times; i++) {\r\n        string += str;\r\n    }\r\n    return string;\r\n}\r\n  \r\n\r\n\r\nexport function fnd(str, pttr, tag) {\r\n    let closing = false;\r\n    while (str.indexOf(pttr) != -1) {\r\n        str = str.replace(pttr, `<${closing ? \"/\" : \"\"}${tag}>`);\r\n        closing = !closing;\r\n    }\r\n    return str;\r\n}\r\n\r\nfunction _remove(string, from, to) { // not including to\r\n    return string.substring(0, from) + string.substring(to);\r\n  }\r\n  \r\n\r\nexport function findLink(str)\r\n{\r\n    let i = str.indexOf(\"[\");\r\n\r\n    // [ NOT found\r\n    if (i == -1) \r\n        return str; \r\n        \r\n    let restSTR = str.slice(i + 1, str.length); // string after [\r\n    let end_index = restSTR.indexOf(\"](\");\r\n\r\n\r\n    // ]( NOT found\r\n    if (end_index == -1) \r\n        return str;\r\n    \r\n    let n_index = restSTR.indexOf(\"\\n\");\r\n    \r\n    // see if [ and ]( are in the same line\r\n    if ( (n_index < end_index) && (n_index !== -1) ) \r\n    {\r\n        console.log(\"[FIRST] not in same line\", i, end_index)\r\n        // split \"[\" and the rest of the string\r\n        let str1 = str.slice(0,    i + 1); \r\n        let str2 = _remove(str, 0, i + 1);\r\n        console.log([str1, str2])\r\n        return [str1, str2];\r\n    }\r\n\r\n    \r\n    let restRest = restSTR.slice(end_index + 2, restSTR.length); // string after ](\r\n\r\n    let j = restRest.indexOf(\")\");\r\n\r\n    // ) not found\r\n    if (j == -1) \r\n        return str; // if ) is nowhere to be found there will be no more links\r\n\r\n    n_index = restRest.indexOf(\"\\n\");\r\n    \r\n    // ]( and ) NOT in same line\r\n    if ( (n_index < j) && (n_index !== -1) ) \r\n    {\r\n        // console.log(\"]( and ) NOT in same line\");\r\n        // console.log(\"tzei\", j)\r\n        let str1 = str.slice(0,    i + end_index + 2  + j + 2);\r\n        let str2 = _remove(str, 0, i + end_index + 2  + j + 2);\r\n        return [str1, str2]\r\n    }\r\n    \r\n    let link = restRest.slice(0, j);\r\n    let desc = restSTR.slice(0, end_index);\r\n\r\n    let total_length = (desc.length + 2) + (link.length + 2);\r\n\r\n\r\n    str = _remove(str, i, i + total_length);\r\n\r\n    let str2 = str.substring(0, i);\r\n    let str1 = _remove(str, 0, i);\r\n\r\n    \r\n    \r\n    return [str2 + `<a href=\"${link}\" target=\"_blank\" rel=\"noopener noreferrer\">${desc}</a>`, str1];\r\n};\r\n\r\n\r\nexport function removeAtRange(str, x, y) {\r\n    return str.substring(x, y);\r\n}\r\n  \r\n\r\nfunction removeAtRanges(string, start, end)\r\n{   \r\n    return [string.substring(start, end),  string.substring(end, string.length) ]\r\n}\r\n\r\n\r\nexport function __line_replace(string, symbol, open_tag, close_tag)\r\n{\r\n    let $symbol = `\\n${symbol}`;    \r\n    let str1 = \"\";  // part of string that has been dealth with\r\n    let str0 = string; // rest of string we are dealing with\r\n\r\n    let len = open_tag.length;\r\n\r\n    // TODO: If symbol.length > 1 then bug\r\n    if (str0[0] == symbol)\r\n    {\r\n        str0 = str0.replace(symbol, `${open_tag}`);\r\n        str0 = str0.replace(\"\\n\",   `${close_tag}\\n`);\r\n    }\r\n\r\n\r\n    let i = str0.indexOf($symbol);\r\n\r\n    while (i !== -1)\r\n    {\r\n        str0 = str0.replace($symbol, `\\n${open_tag}`);\r\n\r\n        let _ = removeAtRanges(str0, 0, i  + len);\r\n        \r\n        str1 += _[0]; // Vihart \r\n        str0 = _[1];\r\n\r\n        str0 = str0.replace(\"\\n\", `${close_tag}\\n`);\r\n        \r\n        i = str0.indexOf($symbol);\r\n    };\r\n\r\n    str1 += str0\r\n\r\n    return str1;\r\n}\r\n\r\n\r\nexport function findInside(str, match) {\r\n    let i = str.indexOf(match); str = str.replace(match, ' ');\r\n    let j = str.indexOf(match); str = str.replace(match, ' ');\r\n    return [i, j == -1 ? str.length : j, str];\r\n}\r\n\r\n  ","C:\\Users\\progr\\Desktop\\win11\\editor\\src\\components\\renderMain.js",["82","83"],"import katex from \"katex\";\r\nimport convertFraction, { insert_at, splitAtRange } from \"./parsing\";\r\nimport {Latex, line_repl, repl, m, fnd, removeAtRange, __line_replace, findLink, findInside, just_repl} from './replace'\r\n\r\n// convert math string e.g `x/5` to latex `\\frac{x}{5}`\r\nexport function convertLatex(sub_str)\r\n{\r\n  Latex.forEach(symbol => {\r\n    sub_str = sub_str.replaceAll(symbol[0], symbol[1] + \" \")\r\n  });\r\n  \r\n  try {\r\n    sub_str = convertFraction(sub_str);\r\n  } catch(e) {};\r\n\r\n  return katex.renderToString(sub_str, {throwOnError: false});\r\n};\r\n\r\nexport const convertLinks = (string) => {\r\n  let str1 = \"\"\r\n  let _ = findLink(string);\r\n\r\n\r\n  while ( typeof(_) !== \"string\" )\r\n  {\r\n      str1 += _[0];\r\n      _ = findLink(_[1]);\r\n  }\r\n\r\n  return str1 + _;\r\n}\r\n\r\n\r\nexport function renderMarkdown(val)\r\n  {\r\n    line_repl.forEach(i => {\r\n      val = __line_replace(val, i[0], i[1], i[2]);\r\n    })\r\n\r\n\r\n    just_repl.forEach(i => {\r\n      \r\n      val = val.replaceAll(i[0], i[1]);\r\n    })\r\n\r\n    \r\n    repl.forEach(i => {\r\n      val = fnd(val, i[0], i[1]);\r\n    })\r\n\r\n    val = convertLinks(val);\r\n  \r\n    return val;\r\n  }\r\n\r\n\r\nexport function findAllMath(str, ptrn=\"$$\", className=\"math\", tag=\"span\") {\r\n  let ind = findInside(str, ptrn); // Find where it starts and ends \r\n  let sub_str;\r\n\r\n  let math_strings = [];\r\n\r\n  while (ind[0] != -1) {\r\n    str= ind[2]; // End\r\n    sub_str = removeAtRange(str, ind[0], ind[1]); // math string\r\n    str = splitAtRange(str, ind[0], ind[1]); // rest of the string\r\n\r\n    math_strings.push(sub_str);\r\n\r\n    let html = `<${tag} class=\"${className}\"></${tag}>`\r\n\r\n\r\n    str = insert_at(str, html, ind[0]);\r\n    ind = findInside(str, ptrn);\r\n  }\r\n\r\n  return [str, math_strings];\r\n}\r\n\r\n// export function addLineNumbers(codeString)\r\n// {\r\n//   return \"<span>\" + codeString.split(\"\\n\").join(\"</span><span>\") + \"</span>\";\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\progr\\Desktop\\win11\\editor\\src\\elementComponents\\dialog.js",["84","85","86","87"],"import { Dialog, LinearProgress } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\n\r\n\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n\r\nimport { Latex, repl, line_repl } from \"../components/replace\";\r\nimport { convertLatex, convertLinks } from \"../components/renderMain\"\r\n\r\n\r\nimport SimpleTable from './table';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\n\r\n\r\nfunction convertDict(latex_array)\r\n{\r\n    let obj = [];\r\n    obj.push({\"first\": convertLatex(\"(1)/(4πε0)\"), \"second\": \"(1)/(4πε0)\", \"third\": \"Fraction (a)/(b) is converted to \\\\frac{a}{b}\" });\r\n    for (let i=0; i < latex_array.length; i++)\r\n    {\r\n        let dict;\r\n        if (latex_array[i][0] === \"sqrt\")\r\n            dict = ({\"first\": convertLatex(\"sqrt {x + 1}\"), \"second\": \"sqrt {x + 1}\"});\r\n        else if (latex_array[i][1] === \"$1_$2\")\r\n            dict = ({\"first\": convertLatex(\"x0\"), \"second\": \"x0\"})    \r\n        else\r\n            dict = ({\"first\": convertLatex(latex_array[i][1]), \"second\": latex_array[i][0]})\r\n\r\n        dict[\"third\"] = latex_array[i][2];\r\n\r\n        obj.push(dict);\r\n\r\n    }\r\n\r\n    return obj;\r\n}\r\n\r\n\r\nfunction convertDict2(html_array, line_arr, word=\"Math\")\r\n{\r\n    let arr = [ ];\r\n\r\n    let page = \"https://github.com/Greece4ever\";\r\n    let _link = `[${word}](${page})`;\r\n    \r\n    arr.push({first: convertLinks(_link), second: _link, third: \"Link\" })\r\n\r\n    arr.push({first: convertLatex(\"x^2 = -1\"), second: \"$$ x^2 = - 1 $$\", third: \"Use $$ to write math\" })\r\n\r\n    for (let i=0; i < html_array.length; i++)\r\n    {\r\n        let obj = {};\r\n        let tag  = html_array[i][1];\r\n        let mdown = html_array[i][0];\r\n        \r\n        if (!tag === \"pre\")\r\n            obj.first   = `<${tag}>${word}</${tag}>`;\r\n        else\r\n            obj.first   = `<${tag}><span>${word}</span></${tag}>`;\r\n\r\n        obj.second  = `${mdown}${word}${mdown}`;\r\n        obj.third   =  html_array[i][2]\r\n\r\n        arr.push(obj);\r\n    }\r\n\r\n    for (let i=0; i < line_arr.length; i++)\r\n    {\r\n        let obj = {};\r\n\r\n        obj.first  = line_arr[i][1] + word + line_arr[i][2];\r\n        obj.second = line_arr[i][0] + word\r\n        obj.third = line_arr[i][3]\r\n\r\n        arr.push(obj);\r\n    }\r\n    \r\n\r\n    return arr;\r\n}\r\n\r\nconst l_table = convertDict(Latex);\r\nconst h_table = convertDict2(repl, line_repl);\r\n\r\n\r\nconst HelpDialog = (props) => {\r\n    return (\r\n        <Dialog onClose={() => props.setOpen(false)} className={\"XAXAXAXA\"}  maxWidth={\"xl\"}  open={props.open}>\r\n\r\n            <DialogTitle style={{background: \"radial-gradient(#acacac, transparent)\"}}>\r\n                <div style={{    display: 'flex',    alignItems: 'center',    flexWrap: 'wrap',}}>\r\n                    <HelpIcon style={{width: \"24x\", height: \"24px\"}} />\r\n                    <span style={{marginLeft: \"5px\"}}>Formatting help</span>\r\n                </div>\r\n            </DialogTitle>\r\n                <DialogContent className={\"PEOSPEOSPEOS\"}>\r\n                <DialogContentText style={{wordWrap: \"break-word\"}}>\r\n                    Below you can find 2 tables\r\n                    <ul> 1. <a href=\"\" onClick={(e) => {\r\n                        e.preventDefault();\r\n                        document.getElementsByClassName(\"PEOSPEOSPEOS\")[0].scrollTop += document.getElementById(\"table0\").getBoundingClientRect().top - 100;\r\n                        } }>Latex</a>: Symbols are replaced only when inside $$ $$, (e.g $$ &gt;= $$ )</ul>\r\n\r\n                    <ul> 2. <a href=\"#\" onClick={e => {\r\n                        e.preventDefault();\r\n                        document.getElementsByClassName(\"PEOSPEOSPEOS\")[0].scrollTop += document.getElementById(\"table1\").getBoundingClientRect().top - 100;\r\n\r\n                        \r\n                    }}>HTML</a> are replaced everywhere but inside $$ (math) and ``` (code)</ul>\r\n                    \r\n                    You type the symbols in the <b>markdown</b> tab, then they output whatever is in the other tab\r\n\r\n                </DialogContentText>\r\n            \r\n\r\n            <SimpleTable id={\"table0\"} first={\"Latex\"} second={\"Markdown\"} table={l_table}></SimpleTable>\r\n\r\n            <SimpleTable id={\"table1\"} first={\"HTML\"} second={\"Markdown\"} table={h_table}></SimpleTable>\r\n\r\n\r\n            </DialogContent>\r\n\r\n\r\n\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default HelpDialog;","C:\\Users\\progr\\Desktop\\win11\\editor\\src\\elementComponents\\table.js",["88"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing.unit * 3,\r\n    overflowX: 'hidden',\r\n  },\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\n\r\nfunction SimpleTable(props) {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <div id={props.id} className={classes.root}>\r\n      <Table className={classes.table}>\r\n        <TableHead style={{background: \"radial-gradient(#dbdbdb, transparent)\"}}>\r\n          <TableRow hover={true}>\r\n            <TableCell>{props.first}</TableCell>\r\n            <TableCell>{props.second}</TableCell>\r\n            <TableCell>Description</TableCell>\r\n\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n\r\n          {props.table.map(n => {\r\n            return (\r\n              <TableRow hover={true}   key={n.id}>\r\n                <TableCell dangerouslySetInnerHTML={{__html: n.first}} component=\"th\" scope=\"row\">\r\n                  {/* {n.first} */}\r\n                </TableCell>\r\n                <TableCell style={{\"fontFamily\": \"math\"}}><code>{n.second}</code></TableCell>\r\n                <TableCell style={{\"fontFamily\": \"math\"}}> <blockquote>{n.third}</blockquote> </TableCell>\r\n\r\n              </TableRow>\r\n            );\r\n          })}\r\n\r\n\r\n\r\n\r\n        </TableBody>\r\n      </Table>\r\n     </div>\r\n  );\r\n}\r\n\r\nSimpleTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SimpleTable);\r\n","C:\\Users\\progr\\Desktop\\win11\\editor\\src\\elementComponents\\save.js",[],"C:\\Users\\progr\\Desktop\\win11\\editor\\src\\elementComponents\\icons.js",["89","90","91","92","93","94"],"import React, { useEffect, useState } from 'react';\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\nimport SaveButtton from './save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport Brightness3Icon from '@material-ui/icons/Brightness3';\r\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\r\n\r\nimport logoPDF from './pdf.svg';\r\nimport logoSVG from './svg.svg';\r\nimport logoPNG from './png-file-format.svg';\r\nimport CopyrightIcon from '@material-ui/icons/Copyright';\r\nimport SimpleDialog from './dialog2'\r\nimport HelpDialog from './dialog';\r\n\r\nconst createIcons = () => {\r\n    let ret = [];\r\n    let icons = [logoPDF, logoSVG, logoPNG];\r\n    let creators = [\r\n        <div>Icons made by <a href=\"https://www.flaticon.com/authors/dimitry-miroliubov\" title=\"Dimitry Miroliubov\">Dimitry Miroliubov</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>,\r\n        <div>Icons made by <a href=\"https://www.flaticon.com/authors/vitaly-gorbachev\" title=\"Vitaly Gorbachev\">Vitaly Gorbachev</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>,\r\n        <div>Icons made by <a href=\"https://www.freepik.com\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\r\n    ]\r\n\r\n    for (let i=0; i < icons.length; i++)\r\n    {\r\n        ret.push({\"src\" : icons[i], \"author\" : creators[i]});\r\n    }\r\n\r\n    return ret;\r\n}\r\n\r\nconst Icons = (props) => {\r\n    const [helpDialogOpen, setHelpDialogOpen] = useState(false);\r\n    const [cDialogOpen, setCdialogOpen] = useState(false);\r\n    const [icons, setIcons] = useState(createIcons());\r\n    const [dark, setDark] = useState(false);\r\n\r\n    React.useEffect(() => {\r\n        props.setDarkMode(dark);\r\n    }, [dark])\r\n \r\n    return (\r\n        <div style={{ position: \"absolute\", right: 0, bottom: 0, display: \"grid\"}}>\r\n            <HelpDialog open={helpDialogOpen} setOpen={setHelpDialogOpen} />\r\n\r\n            <SimpleDialog onClose={setCdialogOpen} Icons={icons} open={cDialogOpen} />\r\n\r\n             \r\n            <SaveButtton backgroundColor={\"#3f51b5\"} color={ \"primary\" } icon={<SettingsIcon  />}>\r\n                <Fab onClick={() => setDark(prev => !prev)} style={{margin: \"10px\", backgroundColor: \"#2a2d2f\", color: \"#f1ff1a\"}}>\r\n                    <Brightness3Icon />\r\n                </Fab>\r\n\r\n                <Fab onClick={() => setHelpDialogOpen(true)} style={{margin: \"10px\", backgroundColor: \"#2a2d2f\", color: \"white\"}}>\r\n                    <HelpIcon />\r\n                </Fab>\r\n                <Fab onClick={() => setCdialogOpen(true)} style={{margin: \"10px\", backgroundColor: \"#2a2d2f\", color: \"white\"}}>\r\n                    <CopyrightIcon/>\r\n                </Fab>\r\n\r\n            </SaveButtton>\r\n\r\n            <SaveButtton backgroundColor={\"#f50057\"} color={ \"secondary\" } icon={ <SaveAltIcon /> }>\r\n\r\n                <Fab  style={{margin: \"10px\", background: \"#2a2d2f\"}}>\r\n                    {/* <PictureAsPdfIcon style={{color: \"red\"}} /> */}\r\n                    <img style={{width: \"32px\"}} src={logoPDF}></img>\r\n                </Fab>\r\n                <Fab style={{margin: \"10px\", backgroundColor: \"#2a2d2f\"}}>\r\n                <img style={{width: \"32px\"}} src={logoSVG}></img>\r\n                </Fab>\r\n                <Fab style={{margin: \"10px\", backgroundColor: \"#2a2d2f\"}}>\r\n                    <img style={{width: \"32px\"}} src={logoPNG}></img>\r\n                </Fab>\r\n\r\n                \r\n            </SaveButtton>\r\n\r\n        </div>  \r\n    );\r\n}\r\n\r\nexport default Icons;","C:\\Users\\progr\\Desktop\\win11\\editor\\src\\elementComponents\\dialog2.js",["95","96","97"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport CopyrightIcon from '@material-ui/icons/Copyright';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  avatar: {\r\n    backgroundColor: blue[100],\r\n    color: blue[600],\r\n  },\r\n});\r\n\r\nfunction SimpleDialog(props) {\r\n  const classes = useStyles();\r\n  const { onClose, open } = props;\r\n\r\n  return (\r\n    <Dialog onClose={() => onClose()} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n      <footer>\r\n      <DialogTitle id=\"simple-dialog-title\">\r\n        <div style={{    display: 'flex',    alignItems: 'center',    flexWrap: 'wrap',}}>\r\n            <CopyrightIcon style={{width: \"24x\", height: \"24px\"}} />\r\n            <span style={{marginLeft: \"5px\"}}>Copyright - Footer</span>\r\n          </div>\r\n      </DialogTitle>\r\n      <List>\r\n        {props.Icons.map((icon) => (\r\n          <ListItem>\r\n            <ListItemAvatar>\r\n              <Avatar className={classes.avatar}>\r\n                <img style={{width: \"32px\"}} src={icon.src}></img>\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText primary={icon.author} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      </footer>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default SimpleDialog;\r\n\r\n",{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":36,"column":11,"nodeType":"104","messageId":"105","endLine":36,"endColumn":34},{"ruleId":"102","severity":1,"message":"106","line":37,"column":25,"nodeType":"104","messageId":"105","endLine":37,"endColumn":35},{"ruleId":"102","severity":1,"message":"107","line":38,"column":16,"nodeType":"104","messageId":"105","endLine":38,"endColumn":35},{"ruleId":"108","severity":1,"message":"109","line":103,"column":7,"nodeType":"110","messageId":"111","endLine":121,"endColumn":8},{"ruleId":"112","severity":1,"message":"113","line":125,"column":6,"nodeType":"114","endLine":125,"endColumn":14,"suggestions":"115"},{"ruleId":"112","severity":1,"message":"116","line":221,"column":6,"nodeType":"114","endLine":221,"endColumn":17,"suggestions":"117"},{"ruleId":"118","severity":1,"message":"119","line":23,"column":25,"nodeType":"120","messageId":"121","endLine":23,"endColumn":27},{"ruleId":"118","severity":1,"message":"119","line":43,"column":25,"nodeType":"120","messageId":"121","endLine":43,"endColumn":27},{"ruleId":"118","severity":1,"message":"119","line":88,"column":23,"nodeType":"120","messageId":"121","endLine":88,"endColumn":25},{"ruleId":"118","severity":1,"message":"119","line":105,"column":13,"nodeType":"120","messageId":"121","endLine":105,"endColumn":15},{"ruleId":"118","severity":1,"message":"122","line":129,"column":16,"nodeType":"120","messageId":"121","endLine":129,"endColumn":18},{"ruleId":"102","severity":1,"message":"123","line":1,"column":8,"nodeType":"104","messageId":"105","endLine":1,"endColumn":13},{"ruleId":"112","severity":1,"message":"124","line":34,"column":3,"nodeType":"104","endLine":34,"endColumn":12,"suggestions":"125"},{"ruleId":"102","severity":1,"message":"126","line":1,"column":10,"nodeType":"104","messageId":"105","endLine":1,"endColumn":19},{"ruleId":"127","severity":1,"message":"128","line":11,"column":6,"nodeType":"129","messageId":"121","endLine":11,"endColumn":36},{"ruleId":"118","severity":1,"message":"122","line":54,"column":30,"nodeType":"120","messageId":"121","endLine":54,"endColumn":32},{"ruleId":"118","severity":1,"message":"119","line":71,"column":11,"nodeType":"120","messageId":"121","endLine":71,"endColumn":13},{"ruleId":"118","severity":1,"message":"119","line":79,"column":19,"nodeType":"120","messageId":"121","endLine":79,"endColumn":21},{"ruleId":"118","severity":1,"message":"119","line":101,"column":11,"nodeType":"120","messageId":"121","endLine":101,"endColumn":13},{"ruleId":"118","severity":1,"message":"119","line":153,"column":17,"nodeType":"120","messageId":"121","endLine":153,"endColumn":19},{"ruleId":"118","severity":1,"message":"119","line":185,"column":18,"nodeType":"120","messageId":"121","endLine":185,"endColumn":20},{"ruleId":"102","severity":1,"message":"130","line":3,"column":33,"nodeType":"104","messageId":"105","endLine":3,"endColumn":34},{"ruleId":"118","severity":1,"message":"122","line":63,"column":17,"nodeType":"120","messageId":"121","endLine":63,"endColumn":19},{"ruleId":"102","severity":1,"message":"131","line":1,"column":18,"nodeType":"104","messageId":"105","endLine":1,"endColumn":32},{"ruleId":"102","severity":1,"message":"132","line":2,"column":17,"nodeType":"104","messageId":"105","endLine":2,"endColumn":25},{"ruleId":"133","severity":1,"message":"134","line":102,"column":29,"nodeType":"135","endLine":105,"endColumn":29},{"ruleId":"133","severity":1,"message":"134","line":107,"column":29,"nodeType":"135","endLine":112,"endColumn":24},{"ruleId":"102","severity":1,"message":"136","line":9,"column":8,"nodeType":"104","messageId":"105","endLine":9,"endColumn":13},{"ruleId":"102","severity":1,"message":"137","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":26},{"ruleId":"102","severity":1,"message":"138","line":38,"column":19,"nodeType":"104","messageId":"105","endLine":38,"endColumn":27},{"ruleId":"112","severity":1,"message":"139","line":43,"column":8,"nodeType":"114","endLine":43,"endColumn":14,"suggestions":"140"},{"ruleId":"141","severity":1,"message":"142","line":70,"column":21,"nodeType":"135","endLine":70,"endColumn":64},{"ruleId":"141","severity":1,"message":"142","line":73,"column":17,"nodeType":"135","endLine":73,"endColumn":60},{"ruleId":"141","severity":1,"message":"142","line":76,"column":21,"nodeType":"135","endLine":76,"endColumn":64},{"ruleId":"102","severity":1,"message":"143","line":2,"column":8,"nodeType":"104","messageId":"105","endLine":2,"endColumn":17},{"ruleId":"102","severity":1,"message":"144","line":4,"column":8,"nodeType":"104","messageId":"105","endLine":4,"endColumn":14},{"ruleId":"141","severity":1,"message":"142","line":41,"column":17,"nodeType":"135","endLine":41,"endColumn":61},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"no-unused-vars","'followSystemColorScheme' is defined but never used.","Identifier","unusedVar","'collectCSS' is defined but never used.","'isDarkReaderEnabled' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'addLinesToCodeBlocks', 'exitScreenShot', and 'setMathCode'. Either include them or remove the dependency array.","ArrayExpression",["147"],"React Hook useEffect has a missing dependency: 'addLinesToCodeBlocks'. Either include it or remove the dependency array.",["148"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'React' is defined but never used.","React Hook useEffect has a missing dependency: 'fn'. Either include it or remove the dependency array.",["149"],"'insert_at' is defined but never used.","no-control-regex","Unexpected control character(s) in regular expression: \\x00.","Literal","'m' is defined but never used.","'LinearProgress' is defined but never used.","'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Paper' is defined but never used.","'useEffect' is defined but never used.","'setIcons' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside React.useEffect.",["150"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'PropTypes' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},"Update the dependencies array to be: [addLinesToCodeBlocks, exitScreenShot, hidden, setMathCode]",{"range":"159","text":"160"},"Update the dependencies array to be: [addLinesToCodeBlocks, textValue]",{"range":"161","text":"162"},"Update the dependencies array to be: [fn]",{"range":"163","text":"164"},"Update the dependencies array to be: [dark, props]",{"range":"165","text":"166"},[3257,3265],"[addLinesToCodeBlocks, exitScreenShot, hidden, setMathCode]",[5625,5636],"[addLinesToCodeBlocks, textValue]",[807,819],"[fn]",[1826,1832],"[dark, props]"]