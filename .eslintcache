[{"C:\\Users\\test\\Desktop\\math\\my-app\\src\\index.js":"1","C:\\Users\\test\\Desktop\\math\\my-app\\src\\App.js":"2","C:\\Users\\test\\Desktop\\math\\my-app\\src\\reportWebVitals.js":"3","C:\\Users\\test\\Desktop\\math\\my-app\\src\\components\\parsing.js":"4","C:\\Users\\test\\Desktop\\math\\my-app\\src\\components\\hooks.js":"5"},{"size":500,"mtime":1612045558000,"results":"6","hashOfConfig":"7"},{"size":10201,"mtime":1627311777163,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1612045558000,"results":"9","hashOfConfig":"7"},{"size":3617,"mtime":1612191869000,"results":"10","hashOfConfig":"7"},{"size":489,"mtime":1627307458035,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"18qgg9s",{"filePath":"15","messages":"16","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"C:\\Users\\test\\Desktop\\math\\my-app\\src\\index.js",[],["25","26"],"C:\\Users\\test\\Desktop\\math\\my-app\\src\\App.js",["27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49"],"C:\\Users\\test\\Desktop\\math\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\test\\Desktop\\math\\my-app\\src\\components\\parsing.js",["50","51","52","53","54"],"export function splitAtRange(str, x, y) {\n  return str.substring(0, x) + str.substring(y, str.length);\n}\n\nexport function insert_at(str, insrt, pos) {\n  return str.slice(0, pos) + insrt + str.slice(pos, str.length);\n}\n\nlet nums = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\n\n/* Return starting and ending index of outter-most parentheses */\n\n// Heading to the right ---->\nfunction mathRightPar(str, start_index) {\n  let i = start_index; // of parentheses \n    let j = 0;\n  let states = [];\n    for (j=i; j < str.length; j++) {\n        if (str[j] === \"(\") {\n            states.push(1)\n      // Parenteses Found at j creating [ states.length, j];\n    }\n        else if (str[j] == \")\") {\n            // Parenteses poped at j matching [states.length];\n            states.pop();\n            if (!states.length)\n                break;\n        }\n    }\n    return [i, j + 1];\n}\n\n// Heading to the left <----\nfunction matchLeftPar(str, start_index) {\n  let i = start_index; // of parentheses \n  let j = 0;\n  let states = [];\n    for (j=i; j > 0; j--) {\n        if (str[j] === \")\") {\n            states.push(1)\n      // Parenteses Found at j creating [ states.length, j];\n    }\n        else if (str[j] == \"(\") {\n            // Parenteses poped at j matching [states.length];\n            states.pop();\n            if (!states.length)\n                break;\n        }\n    }\n    return [j, i + 1];\n}\n\n// find repeating number character in string at index\nfunction num(str, index, inc=1, comp) {\n  let char;\n\tlet i;\n  for (i=index; comp(i); i += inc) \n  {\n    char = str[i];\n    if (!nums.includes(char)) \n      break;\n  }\n  \n  if (inc === -1) // Reverse if backwards\n\t\treturn [i + 1, index + 1];  \n  return [index, i];\n}\n\n/* \n\t Find the number | prentheses (heading to left or right when inc=-1 or inc=1) \n\t after div (/) symbol and return starting and ending index \n   as an array of [start, end]\n*/\nfunction handle_num(str, index, inc=1) {\n  let comp, j;\n  if (inc === 1) // Forward\n    comp = x => x < str.length;\n  else\n    comp = x => x >= 0; // TODO x > 0 should be x >= (BEGGINING OF \"(\" BRACKETS)\n\n  for (j=(index + inc); comp(j); j += inc)  { // Keep searching until whitespace is cleared\n    if (str[j] !== \" \") {\n      // Parentheses\n      if (str[j] === \"(\") { \n          if (inc === 1) // \"(\" can only be found when searching <---\n        \t\treturn mathRightPar(str, j);            \n      }\n      else if (str[j] == \")\") {\n        if (inc === -1) { // \")\" can only be found when searching <---\n          return matchLeftPar(str, j);            \n        }\n      }\n\t\t\t\n      // Single character | number\n      if (!nums.includes(str[j]))         \n        return [j, j +1]\n      else\n        return num(str, j, inc, comp);\n    }\n  }\n}\n\n// Get rid of outter parentheses\nfunction hpar(str) {\n\tif (str[0] == \"(\") {\n\t\treturn str.trim().substring(1, str.length - 1);\n  }\n  return str.trim();\n}\n\n// Convert only one\nfunction replace_frac(str, index) {\n  let right = handle_num(str, index, 1);\n  let left  = handle_num(str, index, -1);\n  \n  \tlet numerator \t= hpar (str.substring(left[0], left[1]))\n  \tlet denominator = hpar (str.substring(right[0], right[1]));\n  let to_latex = `\\\\frac{${numerator}}{${denominator}}`;\n     \n  let split_str = splitAtRange(str, left[0], right[1]); // Rest of the string\n  return insert_at(split_str, to_latex, left[0])\n}\n\n\n// Convert all fractions (ie 1/5) to latex (\\frac{1}{5})\nexport default function convertFraction(str) {\n\tlet cstr = str;\n\tlet index = cstr.indexOf(\"/\");\n  while (index != -1) {\n\t\tcstr = replace_frac(cstr, index);\n    index = cstr.indexOf(\"/\");\n  }\n  return cstr;\n}\n","C:\\Users\\test\\Desktop\\math\\my-app\\src\\components\\hooks.js",["55","56"],"import React, { useEffect, useState, useRef } from \"react\";\r\n\r\nexport default function useInterval(callback, delay) {\r\n    const savedCallback = useRef();\r\n  \r\n    // Remember the latest callback.\r\n    useEffect(() => {\r\n      savedCallback.current = callback;\r\n    }, [callback]);\r\n  \r\n    // Set up the interval.\r\n    useEffect(() => {\r\n      let id = setInterval(() => {\r\n        savedCallback.current();\r\n      }, delay);\r\n      return () => clearInterval(id);\r\n    }, [delay]);\r\n}\r\n  ",{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":1,"column":38,"nodeType":"63","messageId":"64","endLine":1,"endColumn":44},{"ruleId":"61","severity":1,"message":"65","line":23,"column":8,"nodeType":"63","messageId":"64","endLine":23,"endColumn":11},{"ruleId":"61","severity":1,"message":"66","line":25,"column":8,"nodeType":"63","messageId":"64","endLine":25,"endColumn":18},{"ruleId":"61","severity":1,"message":"67","line":26,"column":8,"nodeType":"63","messageId":"64","endLine":26,"endColumn":11},{"ruleId":"61","severity":1,"message":"68","line":28,"column":8,"nodeType":"63","messageId":"64","endLine":28,"endColumn":14},{"ruleId":"61","severity":1,"message":"69","line":29,"column":8,"nodeType":"63","messageId":"64","endLine":29,"endColumn":15},{"ruleId":"70","severity":1,"message":"71","line":72,"column":28,"nodeType":"72","messageId":"73","endLine":72,"endColumn":30},{"ruleId":"70","severity":1,"message":"71","line":90,"column":12,"nodeType":"72","messageId":"73","endLine":90,"endColumn":14},{"ruleId":"70","severity":1,"message":"74","line":101,"column":16,"nodeType":"72","messageId":"73","endLine":101,"endColumn":18},{"ruleId":"75","severity":1,"message":"76","line":112,"column":4,"nodeType":"77","messageId":"73","endLine":112,"endColumn":34},{"ruleId":"70","severity":1,"message":"71","line":120,"column":17,"nodeType":"72","messageId":"73","endLine":120,"endColumn":19},{"ruleId":"78","severity":1,"message":"79","line":124,"column":19,"nodeType":"80","messageId":"81","endLine":126,"endColumn":6},{"ruleId":"70","severity":1,"message":"71","line":146,"column":17,"nodeType":"72","messageId":"73","endLine":146,"endColumn":19},{"ruleId":"78","severity":1,"message":"79","line":150,"column":19,"nodeType":"80","messageId":"81","endLine":152,"endColumn":6},{"ruleId":"61","severity":1,"message":"82","line":193,"column":10,"nodeType":"63","messageId":"64","endLine":193,"endColumn":16},{"ruleId":"61","severity":1,"message":"83","line":193,"column":18,"nodeType":"63","messageId":"64","endLine":193,"endColumn":27},{"ruleId":"61","severity":1,"message":"84","line":195,"column":9,"nodeType":"63","messageId":"64","endLine":195,"endColumn":16},{"ruleId":"61","severity":1,"message":"85","line":199,"column":10,"nodeType":"63","messageId":"64","endLine":199,"endColumn":19},{"ruleId":"61","severity":1,"message":"86","line":199,"column":21,"nodeType":"63","messageId":"64","endLine":199,"endColumn":33},{"ruleId":"87","severity":1,"message":"88","line":219,"column":6,"nodeType":"89","endLine":219,"endColumn":8,"suggestions":"90"},{"ruleId":"61","severity":1,"message":"91","line":243,"column":15,"nodeType":"63","messageId":"64","endLine":243,"endColumn":21},{"ruleId":"61","severity":1,"message":"92","line":379,"column":15,"nodeType":"63","messageId":"64","endLine":379,"endColumn":20},{"ruleId":"93","severity":1,"message":"94","line":380,"column":11,"nodeType":"95","messageId":"96","endLine":388,"endColumn":12},{"ruleId":"70","severity":1,"message":"74","line":23,"column":25,"nodeType":"72","messageId":"73","endLine":23,"endColumn":27},{"ruleId":"70","severity":1,"message":"74","line":43,"column":25,"nodeType":"72","messageId":"73","endLine":43,"endColumn":27},{"ruleId":"70","severity":1,"message":"74","line":88,"column":23,"nodeType":"72","messageId":"73","endLine":88,"endColumn":25},{"ruleId":"70","severity":1,"message":"74","line":105,"column":13,"nodeType":"72","messageId":"73","endLine":105,"endColumn":15},{"ruleId":"70","severity":1,"message":"71","line":129,"column":16,"nodeType":"72","messageId":"73","endLine":129,"endColumn":18},{"ruleId":"61","severity":1,"message":"97","line":1,"column":8,"nodeType":"63","messageId":"64","endLine":1,"endColumn":13},{"ruleId":"61","severity":1,"message":"98","line":1,"column":28,"nodeType":"63","messageId":"64","endLine":1,"endColumn":36},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'Tab' is defined but never used.","'Typography' is defined but never used.","'Box' is defined but never used.","'Button' is defined but never used.","'AddIcon' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-control-regex","Unexpected control character(s) in regular expression: \\x00.","Literal","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'sub_str', 'sub_str'.","ArrowFunctionExpression","unsafeRefs","'buffer' is assigned a value but never used.","'setBuffer' is assigned a value but never used.","'classes' is assigned a value but never used.","'animation' is assigned a value but never used.","'setAnimation' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'line_repl' and 'repl'. Either include them or remove the dependency array.","ArrayExpression",["101"],"'setVal' is assigned a value but never used.","'value' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'React' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"102","fix":"103"},"Update the dependencies array to be: [line_repl, repl]",{"range":"104","text":"105"},[5006,5008],"[line_repl, repl]"]