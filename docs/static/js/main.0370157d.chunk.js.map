{"version":3,"sources":["components/parsing.js","App.js","components/hooks.js","reportWebVitals.js","index.js"],"names":["splitAtRange","str","x","y","substring","length","insert_at","insrt","pos","slice","nums","mathRightPar","start_index","i","j","states","push","pop","matchLeftPar","num","index","char","inc","comp","includes","handle_num","hpar","trim","replace_frac","right","left","numerator","denominator","to_latex","convertFraction","cstr","indexOf","useStyles","makeStyles","theme","root","background","border","boxShadow","color","height","padding","paper","spacing","textAlign","palette","text","secondary","m","times","string","fnd","pttr","tag","closing","replace","replace_after","rpl","after","removeAtRange","line_replace","pttr0","pttrn1","findInside","match","Latex","replaceMath","sub_str","ptrn","ind","forEach","symbol","replaceAll","e","html","katex","renderToString","throwOnError","replaceMathCenter","App","useState","textValue","setTextValue","value","setValue","value2","setValue2","repl","line_repl","arr","reverse","hdrs","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","localStorage","setItem","hidden","setHidden","val","getItem","onPrintEnd","event","window","addEventListener","removeEventListener","main_color","console","log","document","getElementById","getAttribute","html2canvas","then","canvas","link","createElement","setAttribute","Math","random","toString","split","toDataURL","click","print","_grid","_height","set_height","innerHeight","offsetTop","_render","_rendered","set_rendered","onResize","className","style","display","width","backgroundColor","justifyContent","alignItems","position","onWheel","bottom","Fab","onClick","marginBottom","marginRight","aria-label","Grid","container","ref","borderRight","paddingBottom","paddingRight","item","xs","onChange","handleChange","fontSize","placeholder","mode","name","borderLeft","float","marginTop","fontFamily","overflow","dangerouslySetInnerHTML","__html","margin","minHeight","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0370157d.chunk.js","sourcesContent":["export function splitAtRange(str, x, y) {\r\n  return str.substring(0, x) + str.substring(y, str.length);\r\n}\r\n\r\nexport function insert_at(str, insrt, pos) {\r\n  return str.slice(0, pos) + insrt + str.slice(pos, str.length);\r\n}\r\n\r\nlet nums = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\r\n\r\n/* Return starting and ending index of outter-most parentheses */\r\n\r\n// Heading to the right ---->\r\nfunction mathRightPar(str, start_index) {\r\n  let i = start_index; // of parentheses \r\n    let j = 0;\r\n  let states = [];\r\n    for (j=i; j < str.length; j++) {\r\n        if (str[j] === \"(\") {\r\n            states.push(1)\r\n      // Parenteses Found at j creating [ states.length, j];\r\n    }\r\n        else if (str[j] == \")\") {\r\n            // Parenteses poped at j matching [states.length];\r\n            states.pop();\r\n            if (!states.length)\r\n                break;\r\n        }\r\n    }\r\n    return [i, j + 1];\r\n}\r\n\r\n// Heading to the left <----\r\nfunction matchLeftPar(str, start_index) {\r\n  let i = start_index; // of parentheses \r\n  let j = 0;\r\n  let states = [];\r\n    for (j=i; j > 0; j--) {\r\n        if (str[j] === \")\") {\r\n            states.push(1)\r\n      // Parenteses Found at j creating [ states.length, j];\r\n    }\r\n        else if (str[j] == \"(\") {\r\n            // Parenteses poped at j matching [states.length];\r\n            states.pop();\r\n            if (!states.length)\r\n                break;\r\n        }\r\n    }\r\n    return [j, i + 1];\r\n}\r\n\r\n// find repeating number character in string at index\r\nfunction num(str, index, inc=1, comp) {\r\n  let char;\r\n\tlet i;\r\n  for (i=index; comp(i); i += inc) \r\n  {\r\n    char = str[i];\r\n    if (!nums.includes(char)) \r\n      break;\r\n  }\r\n  \r\n  if (inc === -1) // Reverse if backwards\r\n\t\treturn [i + 1, index + 1];  \r\n  return [index, i];\r\n}\r\n\r\n/* \r\n\t Find the number | prentheses (heading to left or right when inc=-1 or inc=1) \r\n\t after div (/) symbol and return starting and ending index \r\n   as an array of [start, end]\r\n*/\r\nfunction handle_num(str, index, inc=1) {\r\n  let comp, j;\r\n  if (inc === 1) // Forward\r\n    comp = x => x < str.length;\r\n  else\r\n    comp = x => x >= 0; // TODO x > 0 should be x >= (BEGGINING OF \"(\" BRACKETS)\r\n\r\n  for (j=(index + inc); comp(j); j += inc)  { // Keep searching until whitespace is cleared\r\n    if (str[j] !== \" \") {\r\n      // Parentheses\r\n      if (str[j] === \"(\") { \r\n          if (inc === 1) // \"(\" can only be found when searching <---\r\n        \t\treturn mathRightPar(str, j);            \r\n      }\r\n      else if (str[j] == \")\") {\r\n        if (inc === -1) { // \")\" can only be found when searching <---\r\n          return matchLeftPar(str, j);            \r\n        }\r\n      }\r\n\t\t\t\r\n      // Single character | number\r\n      if (!nums.includes(str[j]))         \r\n        return [j, j +1]\r\n      else\r\n        return num(str, j, inc, comp);\r\n    }\r\n  }\r\n}\r\n\r\n// Get rid of outter parentheses\r\nfunction hpar(str) {\r\n\tif (str[0] == \"(\") {\r\n\t\treturn str.trim().substring(1, str.length - 1);\r\n  }\r\n  return str.trim();\r\n}\r\n\r\n// Convert only one\r\nfunction replace_frac(str, index) {\r\n  let right = handle_num(str, index, 1);\r\n  let left  = handle_num(str, index, -1);\r\n  \r\n  \tlet numerator \t= hpar (str.substring(left[0], left[1]))\r\n  \tlet denominator = hpar (str.substring(right[0], right[1]));\r\n  let to_latex = `\\\\frac{${numerator}}{${denominator}}`;\r\n     \r\n  let split_str = splitAtRange(str, left[0], right[1]); // Rest of the string\r\n  return insert_at(split_str, to_latex, left[0])\r\n}\r\n\r\n\r\n// Convert all fractions (ie 1/5) to latex (\\frac{1}{5})\r\nexport default function convertFraction(str) {\r\n\tlet cstr = str;\r\n\tlet index = cstr.indexOf(\"/\");\r\n  while (index != -1) {\r\n\t\tcstr = replace_frac(cstr, index);\r\n    index = cstr.indexOf(\"/\");\r\n  }\r\n  return cstr;\r\n}\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport katex from \"katex\";\r\nimport convertFraction, { insert_at, splitAtRange } from \"./components/parsing\";\r\nimport html2canvas from 'html2canvas';\r\n\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FunctionsIcon from '@material-ui/icons/Functions';\r\n\r\nimport \"./App.css\";\r\n\r\nimport useInterval from \"./components/hooks\";\r\n\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\r\n\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\n\r\nimport AceEditor from \"react-ace\";\r\n\r\nimport \"ace-builds/src-noconflict/mode-markdown\";\r\nimport \"ace-builds/src-noconflict/theme-monokai\";\r\n\r\nimport \"ace-builds/src-noconflict/theme-kuroir\";\r\nimport \"ace-builds/src-noconflict/theme-tomorrow\";\r\n\r\nimport \"ace-builds/src-noconflict/ext-language_tools\"\r\n\r\n\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    background: '#3b3939',\r\n    border: 0,\r\n    \r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    color: 'white',\r\n    height: 48,\r\n    padding: '0 30px',\r\n  },\r\n\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n\r\n}));\r\n\r\n\r\n\r\nfunction m(str, times) {\r\n  let string = \"\";\r\n  for (let i=0; i < times; i++) {\r\n    string += str;\r\n  }\r\n  return string;\r\n}\r\n\r\nfunction hdrs() {\r\n  let arr = [];\r\n  for (let i=1; i <= 4; i++) {\r\n    arr.push([m(\"#\", i), `h${i}`]);\r\n  }\r\n  arr.reverse();\r\n  return arr;\r\n}\r\n\r\n\r\nfunction fnd(str, pttr, tag) {\r\n  let closing = false;\r\n  while (str.indexOf(pttr) != -1) {\r\n    str = str.replace(pttr, `<${closing ? \"/\" : \"\"}${tag}>`);\r\n    closing = !closing;\r\n  }\r\n  return str;\r\n}\r\n\r\nfunction replace_after(str, pttr, rpl, after) {\r\n  return str.slice(0, after) + str.slice(after).replace(pttr, rpl)\r\n}\r\n\r\nfunction removeAtRange(str, x, y) {\r\n  return str.substring(x, y);\r\n}\r\n\r\n\r\nfunction line_replace(str, pttr0, pttrn1, rpl) {\r\n  let i = str.indexOf(pttr0);\r\n  while (i != -1) {\r\n    str = str.replace(pttr0, `<${rpl}>`);\r\n    str =  replace_after(str, pttrn1, `</${rpl}>\\n`, i);\r\n    i = str.indexOf(pttr0);\r\n  }\r\n  return str;\r\n}\r\n\r\nfunction findInside(str, match) {\r\n  let i = str.indexOf(match); str = str.replace(match, ' ');\r\n  let j = str.indexOf(match); str = str.replace(match, ' ');\r\n  return [i, j == -1 ? str.length : j, str];\r\n}\r\n\r\nlet Latex = [\r\n  ['>=', \"\\\\ge\"],\r\n  [\"<=>\", \" \\\\iff \"],\r\n  ['<=', \"\\\\le\"],\r\n  ['=>', \"\\\\implies\"],\r\n  [\"+-\", \"\\\\pm\"],\r\n  [\"sqrt\", \"\\\\sqrt\"],\r\n  [\"!=\", \"\\\\neq\"],\r\n  [/([A-Za-z]|[^\\x00-\\x7F])(\\d)/g, \"$1_$2\"],\r\n  [\"<-\", \"\\\\leftarrow\"],\r\n  [\"->\", \"\\\\rightarrow\"],\r\n]\r\n\r\nfunction replaceMath(str, ptrn=\"$$\") {\r\n  let ind = findInside(str, ptrn); // Find where it starts and ends \r\n  let sub_str;\r\n  while (ind[0] != -1) {\r\n    str= ind[2]; // End\r\n    sub_str = removeAtRange(str, ind[0], ind[1]); // math string\r\n    str = splitAtRange(str, ind[0], ind[1]); // rest of the string\r\n    Latex.forEach(symbol => {\r\n      sub_str = sub_str.replaceAll(symbol[0], symbol[1])\r\n    });\r\n    \r\n    try {\r\n      sub_str = convertFraction(sub_str);\r\n    } catch(e) {};\r\n\r\n    let html = katex.renderToString(sub_str, {throwOnError: false});\r\n\r\n    // html = `<div class=\"center\">${html}</div>`\r\n\r\n    str = insert_at(str, html, ind[0]);\r\n    ind = findInside(str, ptrn);\r\n  }\r\n  return str;\r\n}\r\n\r\n\r\nfunction replaceMathCenter(str, ptrn=\"$$\") {\r\n  let ind = findInside(str, ptrn); // Find where it starts and ends \r\n  let sub_str;\r\n  while (ind[0] != -1) {\r\n    str= ind[2]; // End\r\n    sub_str = removeAtRange(str, ind[0], ind[1]); // math string\r\n    str = splitAtRange(str, ind[0], ind[1]); // rest of the string\r\n    Latex.forEach(symbol => {\r\n      sub_str = sub_str.replaceAll(symbol[0], symbol[1])\r\n    });\r\n    \r\n    try {\r\n      sub_str = convertFraction(sub_str);\r\n    } catch(e) {};\r\n\r\n    let html = katex.renderToString(sub_str, {throwOnError: false});\r\n\r\n    html = `<div class=\"center\">${html}</div>`\r\n\r\n    str = insert_at(str, html, ind[0]);\r\n    ind = findInside(str, ptrn);\r\n  }\r\n  return str;\r\n}\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n  const [textValue, setTextValue] = useState(\"\");\r\n  const [value, setValue]   = useState(\"\");  \r\n  const [value2, setValue2] = useState(\"\");\r\n  const repl = [\r\n    [\"**\", \"b\", \"Bold\"],\r\n    [\"*_\", \"i\", \"Italic\"],\r\n    [\"\\n\\n\", \"p\", \"\"],\r\n    [\"```\", \"pre\", \"Code\"]\r\n  ]\r\n\r\n\r\n  const line_repl = [\r\n    ...hdrs(),\r\n    ['-', \"ul\"]\r\n\r\n  ]\r\n\r\n  useInterval(() => {\r\n    localStorage.setItem(\"html\", textValue)\r\n  }, 15 * 1000);\r\n  \r\n  const [buffer, setBuffer] = useState(\"\");\r\n\r\n  const classes = useStyles();\r\n\r\n  const [hidden, setHidden] = useState(false);\r\n\r\n  const [animation, setAnimation] = useState(\"spin 8s linear infinite\");\r\n\r\n  // Load previous text from memory\r\n  useEffect(() => {\r\n    let val = localStorage.getItem(\"html\");\r\n    if (!val)\r\n      return;\r\n\r\n    setTextValue(val);\r\n\r\n    line_repl.forEach(i => {\r\n      val = line_replace(val, \"\\n\" +i[0], \"\\n\", i[1])\r\n    })\r\n\r\n    repl.forEach(i => {\r\n      val = fnd(val, i[0], i[1]);\r\n    })\r\n\r\n    val = replaceMathCenter(val, \"$$\");\r\n    val = replaceMath(val, \"@@\");\r\n\r\n    setValue(val);\r\n\r\n  }, [])\r\n\r\n\r\n  // Print End Listener\r\n  useEffect(() => {\r\n    const onPrintEnd = (event) => {\r\n      setHidden(false);\r\n    }\r\n      \r\n    window.addEventListener(\"afterprint\", onPrintEnd);\r\n    \r\n    return () => {\r\n      window.removeEventListener('afterprint', onPrintEnd);\r\n    }\r\n  }, []);\r\n\r\n  const main_color = \"rgb(57, 68, 70)\";\r\n\r\n  // Print when hit PRINT .PDF\r\n  useEffect(() => {\r\n    if (hidden) {\r\n      console.log(document.getElementById(\"NOTICEME\").getAttribute(\"val\"));\r\n      if (document.getElementById(\"NOTICEME\").getAttribute(\"val\") == \"1\")\r\n      {\r\n        html2canvas(document.getElementById(\"NOTICEME\") ).then(canvas => {\r\n          var link = document.createElement(\"a\");\r\n          link.setAttribute('download', `math${Math.random().toString().split(\".\")[1]}.png`);\r\n          link.setAttribute('href', canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\"));\r\n          link.click();     \r\n          setHidden(false);    \r\n        })\r\n      }\r\n      else {\r\n        window.print();\r\n      }\r\n    }\r\n  }, [hidden])\r\n\r\n\r\n\r\n  // Editor\r\n  const _grid = useRef();\r\n  const [_height, set_height] = useState(0);\r\n\r\n  useEffect(() => {\r\n    set_height(window.innerHeight - _grid.current.offsetTop);\r\n  }, [_grid])\r\n\r\n\r\n  const _render = useRef();\r\n  const [_rendered, set_rendered] = useState(0);\r\n\r\n  useEffect(() => {\r\n    set_rendered(window.innerHeight - _render.current.offsetTop);\r\n  }, [_render])\r\n\r\n  useEffect(() => {\r\n    const onResize = (event) => {\r\n      set_height(window.innerHeight - _grid.current.offsetTop);\r\n      set_rendered(window.innerHeight - _render.current.offsetTop);\r\n    }\r\n      \r\n    window.addEventListener(\"resize\", onResize);\r\n    \r\n    return () => {\r\n      window.removeEventListener('resize', onResize);\r\n    }\r\n  }, [])\r\n\r\n\r\n\r\n\r\n  const handleChange = e => {\r\n    let val = e;\r\n    setTextValue(val);\r\n\r\n    // ([A-Za-z]|[^\\x00-\\x7F])(\\d)\r\n    line_repl.forEach(i => {\r\n      val = line_replace(val, \"\\n\" +i[0], \"\\n\", i[1])\r\n    })\r\n\r\n    repl.forEach(i => {\r\n      val = fnd(val, i[0], i[1]);\r\n    })\r\n\r\n    val = replaceMathCenter(val, \"$$\");\r\n    val = replaceMath(val, \"@@\");\r\n\r\n    setValue(val);\r\n  }\r\n\r\n  const savePDF = () => {\r\n    document.getElementById(\"NOTICEME\").setAttribute(\"val\", \"0\")\r\n    setHidden(true);\r\n    setValue2(value);\r\n    localStorage.setItem(\"html\", textValue);\r\n  }\r\n\r\n\r\n  const savePNG = () => {\r\n    document.getElementById(\"NOTICEME\").setAttribute(\"val\", \"1\");\r\n    setHidden(true);\r\n    setValue2(value);\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n\r\n      <div style={{display: hidden ? \"none\" : \"\"}}>\r\n\r\n      <div style={{\r\n        width: \"100%\",\r\n        height: \"10px\",\r\n        backgroundColor: \"rgb(57, 68, 70)\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        position: \"relative\"\r\n      \r\n      }}\r\n      \r\n      \r\n      onWheel={() => console.log(\"scroll\")}>\r\n\r\n\r\n      </div>\r\n\r\n      <div style={{\r\n      position: \"absolute\",\r\n      right: 0,\r\n      bottom: 0,\r\n      display: \"grid\"\r\n      }}>\r\n        <Fab onClick={() => savePDF()} style={{marginBottom: \"10px\", marginRight: \"10px\"}} color=\"secondary\" aria-label=\"add\">\r\n          <PictureAsPdfIcon />    \r\n        </Fab>\r\n\r\n        <Fab onClick={() => savePNG()} style={{marginBottom: \"10px\", marginRight: \"10px\"}} color=\"primary\" aria-label=\"add\">\r\n          <ImageIcon />\r\n        </Fab>\r\n      </div>\r\n\r\n\r\n\r\n\r\n      <Grid style={{ }} container spacing={3}>\r\n        <Grid ref={_grid} style={{borderRight: `10px solid ${main_color}`, paddingBottom: 0, paddingRight: 0, height: _height}} item xs={6}>\r\n          <AceEditor  \r\n          value={textValue}\r\n          style={{width: \"100%\"}}\r\n\r\n          onChange={e => handleChange(e)}\r\n          \r\n          fontSize={15}\r\n          height={_height}\r\n          placeholder={`Start typing some math. Syntax rules can be found in https://github.com/Greece4ever/Math-Editor`}\r\n          mode=\"markdown\"\r\n          theme=\"monokai\"\r\n          name=\"blah2\" />\r\n\r\n\r\n        </Grid>\r\n\r\n        <Grid style={{height: _rendered, paddingBottom: 0, borderLeft: `10px solid ${main_color}`}} ref={_render} item xs={6}>\r\n          <div id=\"peos\" style={{\r\n            width: \"100%\",\r\n            background: \"white\",\r\n            float: \"right\",\r\n\r\n            marginTop: \"10px\",\r\n            fontFamily: \"math\",\r\n            height: \"calc(100% - 10px)\",\r\n\r\n            overflow: \"auto\"\r\n          }}\r\n\r\n          dangerouslySetInnerHTML={{__html: value}}></div>\r\n        </Grid>\r\n      </Grid>\r\n      </div>\r\n\r\n        <div val=\"0\" id=\"NOTICEME\" style={{display: hidden ? \"block\" : \"none\", fontFamily: \"math\", margin: \"10px\", minHeight: window.innerHeight}} dangerouslySetInnerHTML={{__html: value2}}></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\n\r\nexport default function useInterval(callback, delay) {\r\n    const savedCallback = useRef();\r\n  \r\n    // Remember the latest callback.\r\n    useEffect(() => {\r\n      savedCallback.current = callback;\r\n    }, [callback]);\r\n  \r\n    // Set up the interval.\r\n    useEffect(() => {\r\n      let id = setInterval(() => {\r\n        savedCallback.current();\r\n      }, delay);\r\n      return () => clearInterval(id);\r\n    }, [delay]);\r\n}\r\n  ","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}