{"version":3,"sources":["components/parsing.js","components/replace.js","components/renderMain.js","components/hooks.js","elementComponents/save.js","elementComponents/pdf.svg","elementComponents/svg.svg","elementComponents/png-file-format.svg","elementComponents/dialog2.js","elementComponents/table.js","elementComponents/dialog.js","elementComponents/icons.js","App.js","reportWebVitals.js","index.js"],"names":["splitAtRange","str","x","y","substring","length","insert_at","insrt","pos","slice","nums","mathRightPar","start_index","i","j","states","push","pop","matchLeftPar","num","index","char","inc","comp","includes","handle_num","hpar","trim","replace_frac","right","left","numerator","denominator","to_latex","Latex","line_repl","repl","just_repl","_remove","string","from","to","findLink","indexOf","restSTR","end_index","n_index","console","log","str1","str2","restRest","link","desc","removeAtRange","removeAtRanges","start","end","findInside","match","replace","convertLatex","sub_str","forEach","symbol","replaceAll","cstr","convertFraction","e","katex","renderToString","throwOnError","renderMarkdown","val","open_tag","close_tag","$symbol","str0","len","startsWith","_","__line_replace","pttr","tag","closing","fnd","findAllMath","ptrn","className","ind","math_strings","html","useDidMountEffect","func","deps","didMount","useRef","useEffect","current","SaveButton","props","open","setOpen","useState","anchorEl","setAnchorEl","style","Fab","disabled","color","marginBottom","marginRight","onClick","event","prev","currentTarget","icon","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","position","backgroundColor","display","children","useStyles","makeStyles","avatar","blue","SimpleDialog","classes","Dialog","aria-labelledby","DialogTitle","id","alignItems","flexWrap","width","height","marginLeft","List","Icons","map","ListItem","ListItemAvatar","Avatar","src","ListItemText","primary","author","withStyles","theme","root","marginTop","spacing","unit","overflowX","table","minWidth","Table","TableHead","background","TableRow","hover","TableCell","first","second","TableBody","n","dangerouslySetInnerHTML","__html","component","scope","third","l_table","latex_array","obj","dict","convertDict","h_table","html_array","line_arr","word","arr","page","_link","mdown","convertDict2","HelpDialog","maxWidth","DialogContent","DialogContentText","wordWrap","href","preventDefault","document","getElementsByClassName","scrollTop","getElementById","getBoundingClientRect","top","helpDialogOpen","setHelpDialogOpen","cDialogOpen","setCdialogOpen","ret","icons","logoPDF","logoSVG","logoPNG","creators","title","createIcons","dark","setDark","settingsOpen","setSettingsOpen","saveOpen","setSaveOpen","clientX","window","innerHeight","clientY","mpos","setMpos","mainRef","React","saveRef","settingRef","localStorage","setItem","setDarkMode","translate","setTranslate","addEventListener","removeEventListener","timeout","setTimeout","onMouseLeave","clearTimeout","element","rect","bottom","isEventInElement","ref","onMouseEnter","transition","transform","margin","save","format","png","svg","pdf","main_color","App","textValue","setTextValue","value","setValue","value2","setValue2","isDark","getItem","text","handleChange","disableDarkMode","enableDarkMode","brightness","contrast","sepia","callback","delay","savedCallback","setInterval","clearInterval","useInterval","hidden","setHidden","onPrintEnd","exitScreenShot","innerHTML","__render","latexElement","type","getAttribute","setMathCode","replaceKatexTags","domtoimage","toSvg","then","blob","saveAs","Math","random","toPng","addLinesToCodeBlocks","moment","print","_grid","_height","set_height","offsetTop","_render","_rendered","set_rendered","onResize","mathSymbols","setMathSymbols","codeSymbols","setCodeSymbols","links","setLinks","code_symbols","_links","convertLinks","math_symbols","addLineNumbers","codeString","q","split","d","c","createElement","innerText","elms","setAttribute","elms2","k","appendChild","fn","changeTarget","setChangeTarget","every","dep","useEffectAllDepsChange","temp1","scrollTo","offsetHeight","Array","getElementsByTagName","classList","add","replaceWith","justifyContent","_format","str_format","error","Grid","container","borderRight","paddingBottom","paddingRight","item","xs","onLoad","editor","session","setNewLineMode","onChange","wrapEnabled","fontSize","placeholder","mode","name","borderLeft","float","fontFamily","overflow","minHeight","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d8b0758d.chunk.js","sourcesContent":["export function splitAtRange(str, x, y) {\r\n  return str.substring(0, x) + str.substring(y, str.length);\r\n}\r\n\r\nexport function insert_at(str, insrt, pos) {\r\n  return str.slice(0, pos) + insrt + str.slice(pos, str.length);\r\n}\r\n\r\nlet nums = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\r\n\r\n/* Return starting and ending index of outter-most parentheses */\r\n\r\n// Heading to the right ---->\r\nfunction mathRightPar(str, start_index) {\r\n  let i = start_index; // of parentheses \r\n    let j = 0;\r\n  let states = [];\r\n    for (j=i; j < str.length; j++) {\r\n        if (str[j] === \"(\") {\r\n            states.push(1)\r\n      // Parenteses Found at j creating [ states.length, j];\r\n    }\r\n        else if (str[j] == \")\") {\r\n            // Parenteses poped at j matching [states.length];\r\n            states.pop();\r\n            if (!states.length)\r\n                break;\r\n        }\r\n    }\r\n    return [i, j + 1];\r\n}\r\n\r\n// Heading to the left <----\r\nfunction matchLeftPar(str, start_index) {\r\n  let i = start_index; // of parentheses \r\n  let j = 0;\r\n  let states = [];\r\n    for (j=i; j > 0; j--) {\r\n        if (str[j] === \")\") {\r\n            states.push(1)\r\n      // Parenteses Found at j creating [ states.length, j];\r\n    }\r\n        else if (str[j] == \"(\") {\r\n            // Parenteses poped at j matching [states.length];\r\n            states.pop();\r\n            if (!states.length)\r\n                break;\r\n        }\r\n    }\r\n    return [j, i + 1];\r\n}\r\n\r\n// find repeating number character in string at index\r\nfunction num(str, index, inc=1, comp) {\r\n  let char;\r\n\tlet i;\r\n  for (i=index; comp(i); i += inc) \r\n  {\r\n    char = str[i];\r\n    if (!nums.includes(char)) \r\n      break;\r\n  }\r\n  \r\n  if (inc === -1) // Reverse if backwards\r\n\t\treturn [i + 1, index + 1];  \r\n  return [index, i];\r\n}\r\n\r\n/* \r\n\t Find the number | prentheses (heading to left or right when inc=-1 or inc=1) \r\n\t after div (/) symbol and return starting and ending index \r\n   as an array of [start, end]\r\n*/\r\nfunction handle_num(str, index, inc=1) {\r\n  let comp, j;\r\n  if (inc === 1) // Forward\r\n    comp = x => x < str.length;\r\n  else\r\n    comp = x => x >= 0; // TODO x > 0 should be x >= (BEGGINING OF \"(\" BRACKETS)\r\n\r\n  for (j=(index + inc); comp(j); j += inc)  { // Keep searching until whitespace is cleared\r\n    if (str[j] !== \" \") {\r\n      // Parentheses\r\n      if (str[j] === \"(\") { \r\n          if (inc === 1) // \"(\" can only be found when searching <---\r\n        \t\treturn mathRightPar(str, j);            \r\n      }\r\n      else if (str[j] == \")\") {\r\n        if (inc === -1) { // \")\" can only be found when searching <---\r\n          return matchLeftPar(str, j);            \r\n        }\r\n      }\r\n\t\t\t\r\n      // Single character | number\r\n      if (!nums.includes(str[j]))         \r\n        return [j, j +1]\r\n      else\r\n        return num(str, j, inc, comp);\r\n    }\r\n  }\r\n}\r\n\r\n// Get rid of outter parentheses\r\nfunction hpar(str) {\r\n\tif (str[0] == \"(\") {\r\n\t\treturn str.trim().substring(1, str.length - 1);\r\n  }\r\n  return str.trim();\r\n}\r\n\r\n// Convert only one\r\nfunction replace_frac(str, index) {\r\n  let right = handle_num(str, index, 1);\r\n  let left  = handle_num(str, index, -1);\r\n  \r\n  \tlet numerator \t= hpar (str.substring(left[0], left[1]))\r\n  \tlet denominator = hpar (str.substring(right[0], right[1]));\r\n  let to_latex = `\\\\frac{${numerator}}{${denominator}}`;\r\n     \r\n  let split_str = splitAtRange(str, left[0], right[1]); // Rest of the string\r\n  return insert_at(split_str, to_latex, left[0])\r\n}\r\n\r\n\r\n// Convert all fractions (ie 1/5) to latex (\\frac{1}{5})\r\nexport default function convertFraction(str) {\r\n\tlet cstr = str;\r\n\tlet index = cstr.indexOf(\"/\");\r\n  while (index != -1) {\r\n\t\tcstr = replace_frac(cstr, index);\r\n    index = cstr.indexOf(\"/\");\r\n  }\r\n  return cstr;\r\n}\r\n","import { insert_at } from \"./parsing\";\r\n\r\nexport let Latex = [\r\n    ['>=', \"\\\\ge\",       \"Greater than/equal\"],\r\n    [\"<=>\", \" \\\\iff \" ,  \"If and only if\"],\r\n    ['<=', \"\\\\le\",       \"Less than/equal\"],\r\n    ['=>', \"\\\\implies\",  \"Implies\"],\r\n    [\"+-\", \"\\\\pm\",       \"Plus/Minus\"],\r\n    [\"sqrt\", \"\\\\sqrt\",   \"Square root, replace x with anything\"],\r\n    [\"!=\", \"\\\\neq\",      \"Not equal\"],\r\n    [/([A-Za-z]|[^\\x00-\\x7F])(\\d)/g, \"$1_$2\", \"Subscript, Replace x with any letter and 0 with any number\"],\r\n    [\"<-\", \"\\\\leftarrow\", \"Leftarrow\"],\r\n    [\"->\", \"\\\\rightarrow\",\"Rightarrow\"],\r\n    [\"*\", \"\\\\cdot\",        \"Centered dot\"]\r\n  ]\r\n\r\n\r\n  \r\nexport const line_repl = [    \r\n\r\n    [\"##_\", \"<h3>\", \"</h3><hr></hr>\", \"Medium text (h3) with underline\"],\r\n    [\"##\", \"<h3>\", \"</h3>\",  \"Medium text (h3)\"],\r\n\r\n    [\"#_\", \"<h2>\", \"</h2><hr></hr>\",  \"Large  text (h2) with underline\"],\r\n    [\"#\", \"<h2>\", \"</h2>\",  \"Large text (h2)\"],\r\n\r\n\r\n\r\n    ['-', \"<ul>\", \"</ul>\", \"Text with left margin\"],\r\n    ['>', \"<blockquote><ul>\", \"</ul></blockquote>\", \"bloquote\"],\r\n]\r\n\r\nexport const repl = [\r\n    [\"**\", \"b\", \"Bold\"],\r\n    [\"*_\", \"i\", \"Italic\"],\r\n    // [\"\\n\\n\", \"p\", \"\"],\r\n    [\"```\", \"pre\", \"Code\"],\r\n    [\"@@\", \"center\", \"Centered Text\"],\r\n    [\"__\", \"sup\", \"Superscript\"],\r\n    [\"^^\", \"sub\", \"Subscript\"],\r\n]\r\n\r\nexport const just_repl = [\r\n    [\"\\n\\n\\n\",     \"<p></p><br>\\n\\n\"], // 2 empty lines (+ 1 line ending e,g hello\\n\\n\\n)\r\n    [\"\\r\\n \\r\\n\", \"<p></p><br>\\r\\n\"],\r\n    [\"  \", \"&nbsp;\"],\r\n]\r\n\r\n\r\nexport function m(str, times) {\r\n    let string = \"\";\r\n    for (let i=0; i < times; i++) {\r\n        string += str;\r\n    }\r\n    return string;\r\n}\r\n  \r\n\r\n\r\nexport function fnd(str, pttr, tag) {\r\n    let closing = false;\r\n    while (str.indexOf(pttr) != -1) {\r\n        str = str.replace(pttr, `<${closing ? \"/\" : \"\"}${tag}>`);\r\n        closing = !closing;\r\n    }\r\n    return str;\r\n}\r\n\r\nfunction _remove(string, from, to) { // not including to\r\n    return string.substring(0, from) + string.substring(to);\r\n  }\r\n  \r\n\r\nexport function findLink(str)\r\n{\r\n    let i = str.indexOf(\"[\");\r\n\r\n    // [ NOT found\r\n    if (i == -1) \r\n        return str; \r\n        \r\n    let restSTR = str.slice(i + 1, str.length); // string after [\r\n    let end_index = restSTR.indexOf(\"](\");\r\n\r\n\r\n    // ]( NOT found\r\n    if (end_index == -1) \r\n        return str;\r\n    \r\n    let n_index = restSTR.indexOf(\"\\n\");\r\n    \r\n    // see if [ and ]( are in the same line\r\n    if ( (n_index < end_index) && (n_index !== -1) ) \r\n    {\r\n        console.log(\"[FIRST] not in same line\", i, end_index)\r\n        // split \"[\" and the rest of the string\r\n        let str1 = str.slice(0,    i + 1); \r\n        let str2 = _remove(str, 0, i + 1);\r\n        console.log([str1, str2])\r\n        return [str1, str2];\r\n    }\r\n\r\n    \r\n    let restRest = restSTR.slice(end_index + 2, restSTR.length); // string after ](\r\n\r\n    let j = restRest.indexOf(\")\");\r\n\r\n    // ) not found\r\n    if (j == -1) \r\n        return str; // if ) is nowhere to be found there will be no more links\r\n\r\n    n_index = restRest.indexOf(\"\\n\");\r\n    \r\n    // ]( and ) NOT in same line\r\n    if ( (n_index < j) && (n_index !== -1) ) \r\n    {\r\n        // console.log(\"]( and ) NOT in same line\");\r\n        // console.log(\"tzei\", j)\r\n        let str1 = str.slice(0,    i + end_index + 2  + j + 2);\r\n        let str2 = _remove(str, 0, i + end_index + 2  + j + 2);\r\n        return [str1, str2]\r\n    }\r\n    \r\n    let link = restRest.slice(0, j);\r\n    let desc = restSTR.slice(0, end_index);\r\n\r\n    let total_length = (desc.length + 2) + (link.length + 2);\r\n\r\n\r\n    str = _remove(str, i, i + total_length);\r\n\r\n    let str2 = str.substring(0, i);\r\n    let str1 = _remove(str, 0, i);\r\n\r\n    \r\n    // starting string, rest of string, link value\r\n    return [str2 + `<a class=\"link69\" href=\"\" target=\"_blank\" rel=\"noopener noreferrer\">${desc}</a>`, str1, link];\r\n    // return [str2 + `<a href=\"${link}\" target=\"_blank\" rel=\"noopener noreferrer\">${desc}</a>`, str1];\r\n};\r\n\r\n\r\nexport const convertLinks = (string) => {\r\n    let str1 = \"\"\r\n    let _ = findLink(string);\r\n    let links = [];\r\n  \r\n    while ( typeof(_) !== \"string\" )\r\n    {\r\n        links.push(_[2]);\r\n        str1 += _[0];\r\n        _ = findLink(_[1]);\r\n    }\r\n\r\n    return [str1 + _, links];\r\n  }  \r\n\r\n\r\nexport function removeAtRange(str, x, y) {\r\n    return str.substring(x, y);\r\n}\r\n  \r\n\r\nfunction removeAtRanges(string, start, end)\r\n{   \r\n    return [string.substring(start, end),  string.substring(end, string.length) ]\r\n}\r\n\r\n\r\nexport function __line_replace(string, symbol, open_tag, close_tag)\r\n{\r\n    let $symbol = `\\n${symbol}`;    \r\n    let str1 = \"\";  // part of string that has been dealth with\r\n    let str0 = string; // rest of string we are dealing with\r\n\r\n    let len = open_tag.length;\r\n\r\n    // TODO: If symbol.length > 1 then bug\r\n    if (str0.startsWith(symbol))\r\n    {\r\n        str0 = str0.replace(symbol, `${open_tag}`);\r\n        str0 = str0.replace(\"\\n\",   `${close_tag}\\n`);\r\n    }\r\n\r\n\r\n    let i = str0.indexOf($symbol);\r\n\r\n    while (i !== -1)\r\n    {\r\n        str0 = str0.replace($symbol, `\\n${open_tag}`);\r\n\r\n        let _ = removeAtRanges(str0, 0, i  + len);\r\n        \r\n        str1 += _[0]; // Vihart \r\n        str0 = _[1];\r\n\r\n        str0 = str0.replace(\"\\n\", `${close_tag}\\n`);\r\n        \r\n        i = str0.indexOf($symbol);\r\n    };\r\n\r\n    str1 += str0\r\n\r\n    return str1;\r\n}\r\n\r\n\r\nexport function findInside(str, match) {\r\n    let i = str.indexOf(match); str = str.replace(match, ' ');\r\n    let j = str.indexOf(match); str = str.replace(match, ' ');\r\n    return [i, j == -1 ? str.length : j, str];\r\n}\r\n\r\n  ","import katex from \"katex\";\r\nimport convertFraction, { insert_at, splitAtRange } from \"./parsing\";\r\nimport {Latex, line_repl, repl, m, fnd, removeAtRange, __line_replace, findLink, findInside, just_repl} from './replace'\r\n\r\n// convert math string e.g `x/5` to latex `\\frac{x}{5}`\r\nexport function convertLatex(sub_str)\r\n{\r\n  Latex.forEach(symbol => {\r\n    sub_str = sub_str.replaceAll(symbol[0], symbol[1] + \" \")\r\n  });\r\n  \r\n  try {\r\n    sub_str = convertFraction(sub_str);\r\n  } catch(e) {};\r\n\r\n  return katex.renderToString(sub_str, {throwOnError: false});\r\n};\r\n\r\nexport function renderMarkdown(val)\r\n  {\r\n    line_repl.forEach(i => {\r\n      val = __line_replace(val, i[0], i[1], i[2]);\r\n    })\r\n\r\n\r\n    just_repl.forEach(i => {\r\n      \r\n      val = val.replaceAll(i[0], i[1]);\r\n    })\r\n\r\n    \r\n    repl.forEach(i => {\r\n      val = fnd(val, i[0], i[1]);\r\n    })\r\n\r\n    // val = convertLinks(val);\r\n  \r\n    return val;\r\n  }\r\n\r\n\r\nexport function findAllMath(str, ptrn=\"$$\", className=\"math\", tag=\"span\") {\r\n  let ind = findInside(str, ptrn); // Find where it starts and ends \r\n  let sub_str;\r\n\r\n  let math_strings = [];\r\n\r\n  while (ind[0] != -1) {\r\n    str= ind[2]; // End\r\n    sub_str = removeAtRange(str, ind[0], ind[1]); // math string\r\n    str = splitAtRange(str, ind[0], ind[1]); // rest of the string\r\n\r\n    math_strings.push(sub_str);\r\n\r\n    let html = `<${tag} class=\"${className}\"></${tag}>`\r\n\r\n\r\n    str = insert_at(str, html, ind[0]);\r\n    ind = findInside(str, ptrn);\r\n  }\r\n\r\n  return [str, math_strings];\r\n}\r\n\r\n// export function addLineNumbers(codeString)\r\n// {\r\n//   return \"<span>\" + codeString.split(\"\\n\").join(\"</span><span>\") + \"</span>\";\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\n\r\nexport default function useInterval(callback, delay) {\r\n    const savedCallback = useRef();\r\n  \r\n    // Remember the latest callback.\r\n    useEffect(() => {\r\n      savedCallback.current = callback;\r\n    }, [callback]);\r\n  \r\n    // Set up the interval.\r\n    useEffect(() => {\r\n      let id = setInterval(() => {\r\n        savedCallback.current();\r\n      }, delay);\r\n      return () => clearInterval(id);\r\n    }, [delay]);\r\n}  \r\n\r\nexport function useEffectAllDepsChange(fn, deps) {\r\n  const [changeTarget, setChangeTarget] = useState(deps);\r\n\r\n  useEffect(() => {\r\n    setChangeTarget(prev => {\r\n      if (prev.every((dep, i) => dep !== deps[i])) {\r\n        return deps;\r\n      }\r\n\r\n      return prev;\r\n    });\r\n  }, [deps]);\r\n\r\n  useEffect(fn, changeTarget);\r\n}\r\n\r\n\r\nexport const useDidMountEffect = (func, deps) => {\r\n  const didMount = useRef(false);\r\n\r\n  useEffect(() => {\r\n      if (didMount.current) func();\r\n      else didMount.current = true;\r\n  }, deps);\r\n}\r\n","import React, { useState } from 'react';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Popover from '@material-ui/core/Popover';\r\n\r\nconst SaveButton = (props) => {\r\n    const {open, setOpen} = props; //useState(false);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const HandleFabClick = (event) => {\r\n        setOpen(prev => !prev);\r\n        setAnchorEl(event.currentTarget);        \r\n    }\r\n\r\n    const handleClose = e => {\r\n        setOpen(false);\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    return (\r\n        <div style={props.style}>       \r\n            <Fab disabled={props.disabled} color={props.color} style={{marginBottom: \"10px\", marginRight: \"10px\"}} onClick={e => HandleFabClick(e)}>\r\n                {props.icon}\r\n            <Popover \r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={e => handleClose(e)}\r\n\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'left',\r\n                  }}\r\n                  transformOrigin={{\r\n                    vertical: 'center',\r\n                    horizontal: 'right',\r\n                  }}>\r\n\r\n            <div style={{position: \"relative\", backgroundColor: props.backgroundColor}}>\r\n                <div style={{display: \"grid\"}}>\r\n                    {props.children}\r\n                </div>\r\n            </div>\r\n            </Popover>\r\n            </Fab>\r\n        </div>  \r\n    );\r\n}\r\n\r\nexport default SaveButton;","export default __webpack_public_path__ + \"static/media/pdf.20a57c59.svg\";","export default __webpack_public_path__ + \"static/media/svg.052d1346.svg\";","export default __webpack_public_path__ + \"static/media/png-file-format.403487f6.svg\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport CopyrightIcon from '@material-ui/icons/Copyright';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  avatar: {\r\n    backgroundColor: blue[100],\r\n    color: blue[600],\r\n  },\r\n});\r\n\r\nfunction SimpleDialog(props) {\r\n  const classes = useStyles();\r\n  const { onClose, open } = props;\r\n\r\n  return (\r\n    <Dialog onClose={() => onClose()} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n      <footer>\r\n      <DialogTitle id=\"simple-dialog-title\">\r\n        <div style={{    display: 'flex',    alignItems: 'center',    flexWrap: 'wrap',}}>\r\n            <CopyrightIcon style={{width: \"24x\", height: \"24px\"}} />\r\n            <span style={{marginLeft: \"5px\"}}>Copyright - Footer</span>\r\n          </div>\r\n      </DialogTitle>\r\n      <List>\r\n        {props.Icons.map((icon) => (\r\n          <ListItem>\r\n            <ListItemAvatar>\r\n              <Avatar className={classes.avatar}>\r\n                <img style={{width: \"32px\"}} src={icon.src}></img>\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText primary={icon.author} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      </footer>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default SimpleDialog;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing.unit * 3,\r\n    overflowX: 'hidden',\r\n  },\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\n\r\nfunction SimpleTable(props) {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <div id={props.id} className={classes.root}>\r\n      <Table className={classes.table}>\r\n        <TableHead style={{background: \"radial-gradient(#dbdbdb, transparent)\"}}>\r\n          <TableRow hover={true}>\r\n            <TableCell>{props.first}</TableCell>\r\n            <TableCell>{props.second}</TableCell>\r\n            <TableCell>Description</TableCell>\r\n\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n\r\n          {props.table.map(n => {\r\n            return (\r\n              <TableRow hover={true}   key={n.id}>\r\n                <TableCell dangerouslySetInnerHTML={{__html: n.first}} component=\"th\" scope=\"row\">\r\n                  {/* {n.first} */}\r\n                </TableCell>\r\n                <TableCell style={{\"fontFamily\": \"math\"}}><code>{n.second}</code></TableCell>\r\n                <TableCell style={{\"fontFamily\": \"math\"}}> <blockquote>{n.third}</blockquote> </TableCell>\r\n\r\n              </TableRow>\r\n            );\r\n          })}\r\n\r\n\r\n\r\n\r\n        </TableBody>\r\n      </Table>\r\n     </div>\r\n  );\r\n}\r\n\r\nSimpleTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SimpleTable);\r\n","import { Dialog, LinearProgress } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\n\r\n\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n\r\nimport { Latex, repl, line_repl, findLink } from \"../components/replace\";\r\nimport { convertLatex,  } from \"../components/renderMain\"\r\n\r\n\r\nimport SimpleTable from './table';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\n\r\n\r\nfunction convertDict(latex_array)\r\n{\r\n    let obj = [];\r\n    obj.push({\"first\": convertLatex(\"(1)/(4πε0)\"), \"second\": \"(1)/(4πε0)\", \"third\": \"Fraction (a)/(b) is converted to \\\\frac{a}{b}\" });\r\n    for (let i=0; i < latex_array.length; i++)\r\n    {\r\n        let dict;\r\n        if (latex_array[i][0] === \"sqrt\")\r\n            dict = ({\"first\": convertLatex(\"sqrt {x + 1}\"), \"second\": \"sqrt {x + 1}\"});\r\n        else if (latex_array[i][1] === \"$1_$2\")\r\n            dict = ({\"first\": convertLatex(\"x0\"), \"second\": \"x0\"})    \r\n        else\r\n            dict = ({\"first\": convertLatex(latex_array[i][1]), \"second\": latex_array[i][0]})\r\n\r\n        dict[\"third\"] = latex_array[i][2];\r\n\r\n        obj.push(dict);\r\n\r\n    }\r\n\r\n    return obj;\r\n}\r\n\r\n\r\nfunction convertDict2(html_array, line_arr, word=\"Math\")\r\n{\r\n    let arr = [ ];\r\n    {\r\n        let page = \"https://github.com/Greece4ever\";\r\n        let _link = `[${word}](${page})`;\r\n        arr.push({first: `<a href=\"${page}\">${word}</a>`, second: _link, third: \"Link\" })    \r\n    }\r\n\r\n    arr.push({first: convertLatex(\"x^2 = -1\"), second: \"$$ x^2 = - 1 $$\", third: \"Use $$ to write math\" })\r\n\r\n    for (let i=0; i < html_array.length; i++)\r\n    {\r\n        let obj = {};\r\n        let tag  = html_array[i][1];\r\n        let mdown = html_array[i][0];\r\n        \r\n        if (!tag === \"pre\")\r\n            obj.first   = `<${tag}>${word}</${tag}>`;\r\n        else\r\n            obj.first   = `<${tag}><span>${word}</span></${tag}>`;\r\n\r\n        obj.second  = `${mdown}${word}${mdown}`;\r\n        obj.third   =  html_array[i][2]\r\n\r\n        arr.push(obj);\r\n    }\r\n\r\n    for (let i=0; i < line_arr.length; i++)\r\n    {\r\n        let obj = {};\r\n\r\n        obj.first  = line_arr[i][1] + word + line_arr[i][2];\r\n        obj.second = line_arr[i][0] + word\r\n        obj.third = line_arr[i][3]\r\n\r\n        arr.push(obj);\r\n    }\r\n    \r\n\r\n    return arr;\r\n}\r\n\r\nconst l_table = convertDict(Latex);\r\nconst h_table = convertDict2(repl, line_repl);\r\n\r\n\r\nconst HelpDialog = (props) => {\r\n    return (\r\n        <Dialog onClose={() => props.setOpen(false)} className={\"XAXAXAXA\"}  maxWidth={\"xl\"}  open={props.open}>\r\n\r\n            <DialogTitle style={{background: \"radial-gradient(#acacac, transparent)\"}}>\r\n                <div style={{    display: 'flex',    alignItems: 'center',    flexWrap: 'wrap',}}>\r\n                    <HelpIcon style={{width: \"24x\", height: \"24px\"}} />\r\n                    <span style={{marginLeft: \"5px\"}}>Formatting help</span>\r\n                </div>\r\n            </DialogTitle>\r\n                <DialogContent className={\"PEOSPEOSPEOS\"}>\r\n                <DialogContentText style={{wordWrap: \"break-word\"}}>\r\n                    Below you can find 2 tables\r\n                    <ul> 1. <a href=\"\" onClick={(e) => {\r\n                        e.preventDefault();\r\n                        document.getElementsByClassName(\"PEOSPEOSPEOS\")[0].scrollTop += document.getElementById(\"table0\").getBoundingClientRect().top - 100;\r\n                        } }>Latex</a>: Symbols are replaced only when inside $$ $$, (e.g $$ &gt;= $$ )</ul>\r\n\r\n                    <ul> 2. <a href=\"#\" onClick={e => {\r\n                        e.preventDefault();\r\n                        document.getElementsByClassName(\"PEOSPEOSPEOS\")[0].scrollTop += document.getElementById(\"table1\").getBoundingClientRect().top - 100;\r\n\r\n                        \r\n                    }}>HTML</a> are replaced everywhere but inside $$ (math) and ``` (code)</ul>\r\n                    \r\n                    You type the symbols in the <b>markdown</b> tab, then they output whatever is in the other tab\r\n\r\n                </DialogContentText>\r\n            \r\n\r\n            <SimpleTable id={\"table0\"} first={\"Latex\"} second={\"Markdown\"} table={l_table}></SimpleTable>\r\n\r\n            <SimpleTable id={\"table1\"} first={\"HTML\"} second={\"Markdown\"} table={h_table}></SimpleTable>\r\n\r\n\r\n            </DialogContent>\r\n\r\n\r\n\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default HelpDialog;","import React, { useEffect, useRef, useState } from 'react';\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\nimport SaveButtton from './save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport Brightness3Icon from '@material-ui/icons/Brightness3';\r\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\r\n\r\nimport logoPDF from './pdf.svg';\r\nimport logoSVG from './svg.svg';\r\nimport logoPNG from './png-file-format.svg';\r\nimport CopyrightIcon from '@material-ui/icons/Copyright';\r\nimport SimpleDialog from './dialog2'\r\nimport HelpDialog from './dialog';\r\nimport { useDidMountEffect } from '../components/hooks'\r\n\r\nconst createIcons = () => {\r\n    let ret = [];\r\n    let icons = [logoPDF, logoSVG, logoPNG];\r\n    let creators = [\r\n        <div>Icons made by <a href=\"https://www.flaticon.com/authors/dimitry-miroliubov\" title=\"Dimitry Miroliubov\">Dimitry Miroliubov</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>,\r\n        <div>Icons made by <a href=\"https://www.flaticon.com/authors/vitaly-gorbachev\" title=\"Vitaly Gorbachev\">Vitaly Gorbachev</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>,\r\n        <div>Icons made by <a href=\"https://www.freepik.com\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\r\n    ]\r\n\r\n    for (let i=0; i < icons.length; i++)\r\n    {\r\n        ret.push({\"src\" : icons[i], \"author\" : creators[i]});\r\n    }\r\n\r\n    return ret;\r\n}\r\n\r\nfunction isEventInElement(event, element)   {\r\n    var rect = element.getBoundingClientRect();\r\n    var x = event.clientX;\r\n    if (x < rect.left || x >= rect.right) return false;\r\n    var y = event.clientY;\r\n    if (y < rect.top || y >= rect.bottom) return false;\r\n    return true;\r\n}\r\n\r\nlet _trans = 56 + 10;\r\n\r\nconst Icons = (props) => {\r\n    const [helpDialogOpen, setHelpDialogOpen] = useState(false);\r\n    const [cDialogOpen, setCdialogOpen] = useState(false);\r\n    const [icons, setIcons] = useState(createIcons());\r\n    const [dark, setDark] = useState(false);\r\n\r\n    const [settingsOpen, setSettingsOpen] = useState(false);\r\n    const [saveOpen,     setSaveOpen]     = useState(false);\r\n\r\n    const [mpos, setMpos] = useState({clientX: window.innerHeight, clientY: window.innerHeight});\r\n    const mainRef = React.useRef();\r\n    \r\n    const saveRef    = useRef(saveOpen);\r\n    const settingRef = useRef(settingsOpen);\r\n    saveRef.current = saveOpen;\r\n    settingRef.current = settingsOpen;\r\n\r\n    useDidMountEffect(() => {\r\n        localStorage.setItem(\"dark\", `${dark}`);\r\n        props.setDarkMode(dark);\r\n    }, [dark])\r\n\r\n    const [translate, setTranslate] = useState(`translate(0, 0)`);\r\n \r\n    useEffect(() => {\r\n        window.addEventListener(\"mousemove\", (e) => {\r\n            setMpos(e);\r\n        })\r\n\r\n        return () => window.removeEventListener(\"mousemove\", () => {}) \r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        let timeout = setTimeout(() => {\r\n            if ( !(saveRef.current || settingRef.current) )\r\n                onMouseLeave();            \r\n        }, 1.5 * 1000)\r\n\r\n        return () => {clearTimeout(timeout)}\r\n    }, [])\r\n\r\n    useDidMountEffect(() => {        \r\n        if (settingsOpen || saveOpen || isEventInElement(mpos, mainRef.current))\r\n            return;\r\n        \r\n        onMouseLeave();\r\n    }, [saveOpen, settingsOpen])\r\n\r\n    useDidMountEffect(() => {\r\n        if (helpDialogOpen || cDialogOpen)\r\n            setTranslate(`translate(${0}, 0)`);\r\n        else\r\n            onMouseLeave();\r\n    }, [cDialogOpen, helpDialogOpen])\r\n\r\n    const onMouseOver = () => {\r\n        setTranslate(`translate(${0}, 0)`);\r\n    }\r\n\r\n    const onMouseLeave = () => {\r\n        if ( !(settingsOpen || saveOpen) )\r\n                setTranslate(`translate(${_trans}px, 0)`);\r\n    }    \r\n\r\n    return (\r\n        <div ref={mainRef} onMouseLeave={e => onMouseLeave(e)} onMouseEnter={e => onMouseOver(e)} style={{position: \"absolute\", right: 0, bottom: 0, display: \"grid\"}}>\r\n            <HelpDialog open={helpDialogOpen} setOpen={setHelpDialogOpen} />\r\n            <SimpleDialog onClose={setCdialogOpen} Icons={icons} open={cDialogOpen} />\r\n\r\n            <SaveButtton disabled={ translate === `translate(${_trans}px, 0)` ? true : false } open={settingsOpen} setOpen={setSettingsOpen} style={{ transition: \"transform 1s\", transform: translate  }} backgroundColor={\"#3f51b5\"} color={ \"primary\" } icon={<SettingsIcon  />}>\r\n                <Fab onClick={() => setDark(prev => !prev)} style={{margin: \"10px\", backgroundColor: \"#2a2d2f\", color: \"#f1ff1a\"}}>\r\n                    <Brightness3Icon />\r\n                </Fab>\r\n\r\n                <Fab onClick={() => setHelpDialogOpen(true)} style={{margin: \"10px\", backgroundColor: \"#2a2d2f\", color: \"white\"}}>\r\n                    <HelpIcon />\r\n                </Fab>\r\n                <Fab onClick={() => setCdialogOpen(true)} style={{margin: \"10px\", backgroundColor: \"#2a2d2f\", color: \"white\"}}>\r\n                    <CopyrightIcon/>\r\n                </Fab>\r\n\r\n            </SaveButtton>\r\n\r\n            <SaveButtton disabled={ translate === `translate(${_trans}px, 0)` ? true : false } open={saveOpen} setOpen={setSaveOpen} style={{ transition: \"transform 1s\",  transform: translate }} backgroundColor={\"#f50057\"} color={ \"secondary\" } icon={ <SaveAltIcon /> }>\r\n\r\n                <Fab onClick={e => props.save(\"pdf\")} style={{margin: \"10px\", background: \"#2a2d2f\"}}>\r\n                    <img style={{width: \"32px\"}} src={logoPDF}></img>\r\n                </Fab>\r\n\r\n                <Fab onClick={e => props.save(\"svg\")} style={{margin: \"10px\", backgroundColor: \"#2a2d2f\"}}>\r\n                    <img style={{width: \"32px\"}} src={logoSVG}></img>\r\n                </Fab>\r\n\r\n                <Fab onClick={e => props.save(\"png\")} style={{margin: \"10px\", backgroundColor: \"#2a2d2f\"}}>\r\n                    <img style={{width: \"32px\"}} src={logoPNG}></img>\r\n                </Fab>\r\n\r\n            </SaveButtton>\r\n\r\n        </div>  \r\n    );\r\n}\r\n\r\nexport default Icons;","import React, { useEffect, useState, useRef } from \"react\";\r\nimport {renderMarkdown, findAllMath, convertLatex} from './components/renderMain';\r\nimport { convertLinks } from './components/replace';\r\n\r\nimport \"./App.css\";\r\n\r\nimport useInterval, {useEffectAllDepsChange, useDidMountEffect} from \"./components/hooks\";\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nimport AceEditor from \"react-ace\";\r\n\r\nimport \"ace-builds/src-noconflict/mode-markdown\";\r\nimport \"ace-builds/src-noconflict/theme-monokai\";\r\n\r\nimport \"ace-builds/src-noconflict/theme-kuroir\";\r\nimport \"ace-builds/src-noconflict/theme-tomorrow\";\r\n\r\nimport \"ace-builds/src-noconflict/ext-language_tools\"\r\n\r\n\r\nimport Icons from './elementComponents/icons';\r\n\r\nimport domtoimage from 'dom-to-image';\r\nimport { saveAs } from 'file-saver';\r\nimport moment from 'moment/min/moment-with-locales'\r\n\r\n\r\nimport {\r\n  enable as enableDarkMode,\r\n  disable as disableDarkMode,\r\n  auto as followSystemColorScheme,\r\n  exportGeneratedCSS as collectCSS,\r\n  isEnabled as isDarkReaderEnabled\r\n} from 'darkreader';\r\n\r\n\r\nconst format = {\r\n  png: \"1\",\r\n  svg: \"2\",\r\n  pdf: \"3\"\r\n} \r\n\r\nconst main_color = \"rgb(57, 68, 70)\";\r\n\r\n\r\nfunction App() {\r\n  const [textValue, setTextValue] = useState(\"\");\r\n  const [value, setValue]   = useState([\"\"]);  \r\n  const [value2, setValue2] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let isDark = localStorage.getItem(\"dark\");\r\n    let text   = localStorage.getItem(\"html\");\r\n\r\n    if (isDark === \"true\")\r\n    {\r\n      setDarkMode(true);\r\n    }\r\n\r\n    if (text)\r\n    {\r\n      if (text.trim() !== \"\")\r\n        handleChange( text )\r\n    }\r\n    // __render( text );\r\n  }, [])\r\n\r\n\r\n  const setDarkMode = (val) => {\r\n    if (!val)\r\n      return disableDarkMode();\r\n    enableDarkMode({\r\n      brightness: 100,\r\n      contrast: 90,\r\n      sepia: 10,\r\n    });\r\n  }\r\n\r\n\r\n  // save localstorage\r\n  useInterval(() => {\r\n    localStorage.setItem(\"html\", textValue);\r\n  }, 15 * 1000);\r\n  \r\n\r\n  const [hidden, setHidden] = useState(false);\r\n\r\n  // Print End Listener\r\n  useEffect(() => {\r\n    const onPrintEnd = (event) => {\r\n      exitScreenShot()\r\n    }\r\n      \r\n    window.addEventListener(\"afterprint\", onPrintEnd);\r\n    \r\n    return () => {\r\n      window.removeEventListener('afterprint', onPrintEnd);\r\n    }\r\n  }, []);\r\n\r\n\r\n  const exitScreenShot = () => {\r\n    setHidden(false);\r\n    document.getElementById(\"NOTICEME\").innerHTML = \"\";\r\n    __render(textValue);\r\n  }\r\n\r\n  // Print when hit PRINT .PDF\r\n  useDidMountEffect(() => {\r\n    if (hidden) {\r\n      let latexElement = document.getElementById(\"NOTICEME\");\r\n      let type = latexElement.getAttribute(\"val\");\r\n      setMathCode();\r\n      \r\n      switch (type)\r\n      {\r\n        case format.svg:\r\n          replaceKatexTags();\r\n          domtoimage.toSvg(latexElement).then(blob => {    saveAs(blob, `math${Math.random()}.svg`);  exitScreenShot(); });\r\n          break;\r\n        case format.png:\r\n          replaceKatexTags();\r\n          domtoimage.toPng(latexElement).then(blob => {    saveAs(blob, `math${Math.random()}.png`);  exitScreenShot(); });\r\n          break;\r\n        case format.pdf:\r\n            addLinesToCodeBlocks();\r\n            document.title = moment().format(\"LLLL\");\r\n            window.print();\r\n            break;\r\n      } \r\n    }\r\n    else \r\n    __render(textValue)\r\n  }, [hidden])\r\n\r\n\r\n  // Editor\r\n  const _grid = useRef();\r\n  const [_height, set_height] = useState(0);\r\n\r\n  useEffect(() => {\r\n    set_height(window.innerHeight - _grid.current.offsetTop);\r\n  }, [_grid])\r\n\r\n\r\n  const _render = useRef();\r\n  const [_rendered, set_rendered] = useState(0);\r\n\r\n  useEffect(() => {\r\n    set_rendered(window.innerHeight - _render.current.offsetTop);\r\n  }, [_render])\r\n\r\n\r\n  useEffect(() => {\r\n    const onResize = (event) => {\r\n      set_height(window.innerHeight - _grid.current.offsetTop);\r\n      set_rendered(window.innerHeight - _render.current.offsetTop);\r\n    }\r\n      \r\n    window.addEventListener(\"resize\", onResize);\r\n    \r\n    return () => {\r\n      window.removeEventListener('resize', onResize);\r\n    }\r\n  }, [])\r\n\r\n  \r\n  const [mathSymbols, setMathSymbols] = useState();\r\n  const [codeSymbols, setCodeSymbols] = useState();\r\n  const [links, setLinks] = useState();\r\n\r\n\r\n  const __render = (val) => {\r\n    debugger\r\n    let code_symbols, _links;\r\n    [val, _links] = convertLinks(val);\r\n    [val, code_symbols] = findAllMath(val, \"```\", \"kostas\", \"pre\");\r\n    let [str, math_symbols] = findAllMath(val, \"$$\", \"leonidas\");\r\n\r\n    setValue( [ renderMarkdown(str) ] );\r\n    setMathSymbols( math_symbols )\r\n    setCodeSymbols( code_symbols )\r\n    setLinks(_links);\r\n    debugger\r\n  }\r\n\r\n\r\n  const addLineNumbers = (codeString) =>\r\n  {\r\n    let q= codeString.split(\"\\n\");\r\n    let d = [];\r\n    for (let i=0; i < q.length; i++)\r\n    {\r\n      let c = document.createElement(\"span\");\r\n      c.innerText = q[i];\r\n      d.push(c);\r\n    }\r\n    return d;\r\n  }\r\n  \r\n\r\n  const setMathCode = () => {\r\n    let elms = document.getElementsByClassName(\"leonidas\");\r\n    \r\n    for (let i=0; i < elms.length; i++)\r\n    {\r\n      elms[i].innerHTML = convertLatex(mathSymbols[i]);\r\n    }\r\n\r\n    elms = document.getElementsByClassName(\"kostas\");\r\n    \r\n    for (let i=0; i < elms.length; i++)\r\n    {\r\n      elms[i].innerText = codeSymbols[i].trim();\r\n    }\r\n\r\n    elms = document.getElementsByClassName(\"link69\");\r\n    for (let i=0; i < elms.length; i++)\r\n    {\r\n      elms[i].setAttribute(\"href\", links[i]);\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n  function addLinesToCodeBlocks() {\r\n    let elms = document.getElementsByClassName(\"kostas\");\r\n    for (let i=0; i < elms.length; i++)\r\n    {\r\n      let elms2 = addLineNumbers(elms[i].innerText);\r\n      elms[i].innerText = \"\";\r\n      for (let k=0; k < elms2.length; k++)\r\n      {\r\n        elms[i].appendChild(elms2[k]);\r\n        elms[i].innerHTML += \"\\n\";\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      addLinesToCodeBlocks();      \r\n    }, 1000)\r\n\r\n    return () => clearTimeout(timeout);\r\n  }, [textValue])\r\n\r\n\r\n  // change between 1 render or multiple renders\r\n  useEffectAllDepsChange(() => {\r\n    let temp1 = document.getElementById(\"peos\");\r\n    setMathCode();\r\n    temp1.scrollTo(0, temp1.offsetHeight)\r\n  }, [value, mathSymbols, codeSymbols, links]);\r\n\r\n\r\n\r\n  const handleChange = e => {\r\n    let val = e;\r\n    setTextValue(val);\r\n    __render(val);\r\n  }\r\n\r\n\r\n  const save = (_format) => {\r\n    let str_format = format[_format];\r\n    if (!str_format)\r\n      return console.error(`Error: ${_format} not found`);\r\n    \r\n    document.getElementById(\"NOTICEME\").setAttribute(\"val\", str_format);\r\n    setHidden(true);\r\n    setValue2(value);\r\n    localStorage.setItem(\"html\", textValue);\r\n  }\r\n\r\n\r\n  function replaceKatexTags()\r\n  {\r\n    Array.from( document.getElementsByTagName(\"mi\") ).forEach(i => {\r\n      let q = document.createElement(\"span\");\r\n      q.classList.add(\"mi\");\r\n      q.innerText = i.innerText;\r\n      i.replaceWith(q);\r\n\r\n    })\r\n\r\n    Array.from( document.getElementsByTagName(\"mrow\") ).forEach(i => {\r\n      let q = document.createElement(\"span\");\r\n      q.classList.add(\"mrow\");\r\n      q.innerText = i.innerText;\r\n      i.replaceWith(q);\r\n    })\r\n\r\n    Array.from( document.getElementsByTagName(\"annotation\") ).forEach(i => {\r\n      let q = document.createElement(\"span\");\r\n      q.classList.add(\"annotation\");\r\n      q.innerText = i.innerText;\r\n      i.replaceWith(q);\r\n    })\r\n\r\n    Array.from( document.getElementsByTagName(\"semantics\") ).forEach(i => {\r\n      let q = document.createElement(\"span\");\r\n      q.classList.add(\"semantics\");\r\n      q.innerText = i.innerText;\r\n      i.replaceWith(q);\r\n    })\r\n\r\n\r\n    Array.from( document.getElementsByTagName(\"math\") ).forEach(i => {\r\n      let q = document.createElement(\"span\");\r\n      q.classList.add(\"math\");\r\n      q.innerText = i.innerText;\r\n      i.replaceWith(q);\r\n    })\r\n\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div style={{display: hidden ? \"none\" : \"\"}}>\r\n        <div style={{\r\n          width: \"100%\",\r\n          height: \"10px\",\r\n          backgroundColor: \"rgb(57, 68, 70)\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          position: \"relative\"\r\n        \r\n        }}></div>\r\n\r\n      <Icons save={save} setDarkMode={setDarkMode} />\r\n\r\n      <Grid style={{ }} container spacing={3}>\r\n        <Grid ref={_grid} style={{borderRight: `10px solid ${main_color}`, paddingBottom: 0, paddingRight: 0, height: _height}} item xs={6}>\r\n          <AceEditor  \r\n          onLoad={(editor) => {\r\n            editor.session.setNewLineMode(\"unix\"); // \\n instead of \\r\\n\r\n          }}\r\n\r\n          value={textValue}\r\n          style={{width: \"100%\"}}\r\n          onChange={e => handleChange(e)}\r\n          wrapEnabled={true}\r\n          fontSize={15}\r\n          height={_height - 12}\r\n          placeholder={`Start typing some math. Syntax rules can be found in https://github.com/Greece4ever/Math-Editor`}\r\n          mode=\"markdown\"\r\n          theme=\"monokai\"\r\n          name=\"blah2\" />\r\n        </Grid>\r\n\r\n        <Grid style={{height: _rendered, paddingBottom: 0, borderLeft: `10px solid ${main_color}`}} ref={_render} item xs={6}>\r\n          <div id=\"peos\" style={{\r\n            width: \"100%\",\r\n            background: \"white\",\r\n            float: \"right\",\r\n\r\n            marginTop: \"10px\",\r\n            fontFamily: \"math\",\r\n            height: \"calc(100% - 10px)\",\r\n            // fontSize: \"17px\",\r\n\r\n            overflow: \"auto\",\r\n            wordWrap: \"break-word\"\r\n          }}\r\n\r\n          dangerouslySetInnerHTML={{__html: hidden ? \"\" : value[0] }}></div>\r\n        </Grid>\r\n      </Grid>\r\n      </div>\r\n\r\n      <div dangerouslySetInnerHTML={{__html: value2}} val=\"0\" id=\"NOTICEME\" \r\n      style={{\r\n        display: hidden ? \"block\" : \"none\", \r\n        fontFamily: \"math\", \r\n        margin: \"10px\", \r\n        minHeight: window.innerHeight,\r\n      }}></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}